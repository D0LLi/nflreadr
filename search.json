[{"path":[]},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team hello@dynastyprocess.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://nflreadr.nflverse.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Many hands make light work! ways can contribute project:","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"open-an-issue","dir":"","previous_headings":"","what":"Open an issue","title":"Contributing","text":"can open issue ’d like request specific function report bug/error.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). can also bring changes nflverse discord team happy discuss!","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"Contributing","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://nflreadr.nflverse.com/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note usethis project released Contributor Code Conduct. contributing project agree abide terms. contribution guidelines inspired guidelines {usethis}","code":""},{"path":"https://nflreadr.nflverse.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 nflreadr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nflreadr.nflverse.com/articles/exporting_nflreadr.html","id":"re-exporting-nflreadr-functions","dir":"Articles","previous_headings":"","what":"Re-exporting nflreadr functions","title":"Using nflreadr in packages","text":"can re-export nflreadr functions package using following roxygen template:","code":"#' @inherit nflreadr::load_nextgen_stats #' @export # Need to add own examples if the function name is different #' @examples #' load_ng_stats(2020) load_ng_stats <- nflreadr::load_nextgen_stats"},{"path":"https://nflreadr.nflverse.com/articles/exporting_nflreadr.html","id":"using-progressr-with-from_url-functions","dir":"Articles","previous_headings":"","what":"Using progressr with from_url functions","title":"Using nflreadr in packages","text":"from_url family functions can adapted progressively() function decorator signal progress. ’s example, adapted load_rosters() source code: cause p() execute rds_from_url call, effectively “signalling” progress. order receive progress updates, user must wrap function (load_rosters, case) progressr::with_progress() shown : information, please see progressr documentation.","code":"load_rosters <- function(seasons = 1999:2020){    # Create a progressor function inside your function that knows how many \"steps\" there will be   p <- progressr::progressor(steps = length(seasons))     # Form the URLs to pass into rds_from_url   urls <- paste0(     \"https://github.com/nflverse/nflverse-rosters/\",     \"raw/master/data/seasons/roster_\",     seasons,      \".rds\")    # Use `progressively()` to wrap the existing function rds_from_url and    # call the `p()` progressor function as a signal immediately after each iteration      out <- purrr::map_dfr(urls, progressively(rds_from_url,p))      return(out) } progressr::with_progress(load_rosters(2010:2020))"},{"path":"https://nflreadr.nflverse.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tan Ho. Author, maintainer, copyright holder. Sebastian Carl. Author. John Edwards. Contributor. Ben Baldwin. Contributor. Thomas Mock. Contributor. Lee Sharpe. Contributor. Pranav Rajaram. Contributor.","code":""},{"path":"https://nflreadr.nflverse.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ho T, Carl S (2023). nflreadr: Download 'nflverse' Data. https://nflreadr.nflverse.com, https://github.com/nflverse/nflreadr.","code":"@Manual{,   title = {nflreadr: Download 'nflverse' Data},   author = {Tan Ho and Sebastian Carl},   year = {2023},   note = {https://nflreadr.nflverse.com, https://github.com/nflverse/nflreadr}, }"},{"path":"https://nflreadr.nflverse.com/index.html","id":"nflreadr-","dir":"","previous_headings":"","what":"nflreadr • Download nflverse Data","title":"nflreadr • Download nflverse Data","text":"nflreadr minimal package downloading data nflverse repositories. includes caching, optional progress updates, data dictionaries. Please note nflverse data repositories reorganized pushed towards nflverse-data repo, v1.2.0+ minimum version supports change. encourage users upgrade version immediately. Python access nflverse data, please check nfl-data-py - maintained Cooper Adams.","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"nflreadr • Download nflverse Data","text":"Install stable version CRAN : Install development version GitHub :","code":"install.packages(\"nflreadr\") install.packages(\"nflreadr\", repos = c(\"https://nflverse.r-universe.dev\", getOption(\"repos\")))  # or use remotes/devtools # install.packages(\"remotes\") remotes::install_github(\"nflverse/nflreadr\")"},{"path":"https://nflreadr.nflverse.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"nflreadr • Download nflverse Data","text":"main functions nflreadr prefixed load_.","code":"library(nflreadr)  load_pbp(2021) #> ── nflverse play by play data ────────────────────────────────────────────────── #> ℹ Data updated: 2022-09-27 07:35:02 EDT #> # A tibble: 50,712 × 372 #>    play_id game_id old_g…¹ home_…² away_…³ seaso…⁴  week posteam poste…⁵ defteam #>      <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <int> <chr>   <chr>   <chr>   #>  1       1 2021_0… 202109… TEN     ARI     REG         1 <NA>    <NA>    <NA>    #>  2      40 2021_0… 202109… TEN     ARI     REG         1 TEN     home    ARI     #>  3      55 2021_0… 202109… TEN     ARI     REG         1 TEN     home    ARI     #>  4      76 2021_0… 202109… TEN     ARI     REG         1 TEN     home    ARI     #>  5     100 2021_0… 202109… TEN     ARI     REG         1 TEN     home    ARI     #>  6     122 2021_0… 202109… TEN     ARI     REG         1 TEN     home    ARI     #>  7     152 2021_0… 202109… TEN     ARI     REG         1 ARI     away    TEN     #>  8     181 2021_0… 202109… TEN     ARI     REG         1 ARI     away    TEN     #>  9     218 2021_0… 202109… TEN     ARI     REG         1 ARI     away    TEN     #> 10     253 2021_0… 202109… TEN     ARI     REG         1 ARI     away    TEN     #> # … with 50,702 more rows, 362 more variables: side_of_field <chr>, #> #   yardline_100 <dbl>, game_date <chr>, quarter_seconds_remaining <dbl>, #> #   half_seconds_remaining <dbl>, game_seconds_remaining <dbl>, #> #   game_half <chr>, quarter_end <dbl>, drive <dbl>, sp <dbl>, …, and #> #   abbreviated variable names ¹​old_game_id, ²​home_team, ³​away_team, #> #   ⁴​season_type, ⁵​posteam_type #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  load_player_stats(2021) #> ── nflverse player stats: offense ────────────────────────────────────────────── #> ℹ Data updated: 2023-01-05 04:08:21 EST #> # A tibble: 5,698 × 52 #>    player…¹ playe…² playe…³ posit…⁴ posit…⁵ heads…⁶ recen…⁷ season  week seaso…⁸ #>    <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <int> <int> <chr>   #>  1 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     1 REG     #>  2 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     2 REG     #>  3 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     3 REG     #>  4 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     4 REG     #>  5 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     5 REG     #>  6 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     6 REG     #>  7 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     7 REG     #>  8 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021     8 REG     #>  9 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021    10 REG     #> 10 00-0019… T.Brady Tom Br… QB      QB      https:… TB        2021    11 REG     #> # … with 5,688 more rows, 42 more variables: completions <int>, attempts <int>, #> #   passing_yards <dbl>, passing_tds <int>, interceptions <dbl>, sacks <dbl>, #> #   sack_yards <dbl>, sack_fumbles <int>, sack_fumbles_lost <int>, #> #   passing_air_yards <dbl>, …, and abbreviated variable names ¹​player_id, #> #   ²​player_name, ³​player_display_name, ⁴​position, ⁵​position_group, #> #   ⁶​headshot_url, ⁷​recent_team, ⁸​season_type #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"https://nflreadr.nflverse.com/index.html","id":"data-sources","dir":"","previous_headings":"","what":"Data Sources","title":"nflreadr • Download nflverse Data","text":"Data accessed package stored GitHub can typically found one following repositories: nflverse/nflverse-data nflverse/nfldata nflverse/espnscrapeR-data dynastyprocess/data ffverse/ffopportunity full list functions, please see reference page. data maintained nflverse project team primarily automated via GitHub Actions. can check status schedules page : https://github.com/nflverse/nflverse-data","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"configuration","dir":"","previous_headings":"","what":"Configuration","title":"nflreadr • Download nflverse Data","text":"following options help configure default nflreadr behaviours. can also configure nflreadr display progress messages progressr package, e.g.","code":"options(nflreadr.verbose)  # TRUE/FALSE to silence messages such as cache warnings options(nflreadr.cache)  # one of \"memory\", \"filesystem\", or \"off\" options(nflreadr.prefer)  # one of \"qs\", \"rds\", \"parquet\", or \"csv\" options(nflreadr.download_path) # defaults to current working directory - change to specify where `nflverse_download()` places data. progressr::with_progress(load_rosters(seasons = 2010:2020))  |========            |  40%"},{"path":"https://nflreadr.nflverse.com/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"nflreadr • Download nflverse Data","text":"best places get help package : nflverse discord (package well anything R/NFL related) opening issue","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"nflreadr • Download nflverse Data","text":"Many hands make light work! ways can contribute project: can open issue ’d like request specific data report bug/error. ’d like contribute code, please check contribution guidelines.","code":""},{"path":"https://nflreadr.nflverse.com/index.html","id":"terms-of-use","dir":"","previous_headings":"","what":"Terms of Use","title":"nflreadr • Download nflverse Data","text":"R code package released open source MIT License. NFL data accessed package belong respective owners, governed terms use.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"function converts dataframes \"home_\" \"away_\" prefixed columns \"team_\" \"opponent_\", doubles rows. makes sure one row team (opposed one row game).","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"","code":"clean_homeaway(dataframe, invert = NULL)"},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"dataframe dataframe invert character vector columns gets inverted referring away team (e.g. home spread = 1 gets converted away_spread = -1)","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"dataframe one row per team (twice long input dataframe)","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_homeaway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Home/Away in dataframes into Team/Opponent dataframes — clean_homeaway","text":"","code":"# \\donttest{ # a small example dataframe s <- data.frame(    game_id = c(\"2020_20_TB_GB\", \"2020_20_BUF_KC\", \"2020_21_KC_TB\"),     game_type = c(\"CON\", \"CON\", \"SB\"),     away_team = c(\"TB\", \"BUF\", \"KC\"),     away_score = c(31L, 24L, 9L),     home_team = c(\"GB\", \"KC\", \"TB\"),     home_score = c(26L, 38L, 31L),     location = c(\"Home\", \"Home\", \"Neutral\"),     result = c(-5L, 14L, 22L),     spread_line = c(3, 3, -3)  )  clean_homeaway(s, invert = c(\"result\",\"spread_line\")) #>          game_id game_type opponent opponent_score team team_score location #> 1  2020_20_TB_GB       CON       TB             31   GB         26     home #> 2  2020_20_TB_GB       CON       GB             26   TB         31     away #> 3 2020_20_BUF_KC       CON      BUF             24   KC         38     home #> 4 2020_20_BUF_KC       CON       KC             38  BUF         24     away #> 5  2020_21_KC_TB        SB       KC              9   TB         31  neutral #> 6  2020_21_KC_TB        SB       TB             31   KC          9  neutral #>   result spread_line #> 1     -5           3 #> 2      5          -3 #> 3     14           3 #> 4    -14          -3 #> 5     22          -3 #> 6    -22           3 # }"},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Player Merge Names — clean_player_names","title":"Create Player Merge Names — clean_player_names","text":"Applies name-cleaning heuristics facilitate joins. heuristics may include: removing periods apostrophes removing common suffixes, Jr, Sr, II, III, IV converting lowercase using ffscrapr::dp_name_mapping common name substitutions, Mitch Trubisky Mitchell Trubisky","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Player Merge Names — clean_player_names","text":"","code":"clean_player_names(   player_name,   lowercase = FALSE,   convert_lastfirst = TRUE,   use_name_database = TRUE )"},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Player Merge Names — clean_player_names","text":"player_name character vector player names lowercase defaults FALSE - TRUE, converts lowercase convert_lastfirst defaults TRUE - converts names \"Last, First\" \"First Last\" use_name_database uses internal name database common substitutions (Mitchell Trubisky Mitch Trubisky etc)","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Player Merge Names — clean_player_names","text":"character vector cleaned names","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Player Merge Names — clean_player_names","text":"Equivalent operation done ffscrapr::dp_clean_names() uses player name database.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_player_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Player Merge Names — clean_player_names","text":"","code":"clean_player_names(c(\"A.J. Green\", \"Odell Beckham Jr.  \", \"Le'Veon Bell Sr.\")) #> [1] \"AJ Green\"      \"Odell Beckham\" \"LeVeon Bell\"    clean_player_names(c(\"Trubisky,      Mitch\", \"Atwell, Chatarius\", \"Elliott, Zeke\", \"Elijah Moore\"),                   convert_lastfirst = TRUE) #> [1] \"Mitchell Trubisky\" \"Tutu Atwell\"       \"Ezekiel Elliott\"   #> [4] \"Elijah Moore\""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize NFL Team Abbreviations — clean_team_abbrs","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"function standardizes NFL team abbreviations nflverse defaults. helps joins plotting, especially new nflplotR package!","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"","code":"clean_team_abbrs(abbr, current_location = TRUE, keep_non_matches = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"abbr character vector abbreviations current_location TRUE (default), abbreviation recent team location used. keep_non_matches TRUE (default) element abbr matched internal mapping vectors kept . Otherwise replaced NA.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"character vector length abbr cleaned team abbreviations included team_abbr_mapping team_abbr_mapping_norelocate (depending value current_location). Non matches may replaced NA (depending value keep_non_matches).","code":""},{"path":"https://nflreadr.nflverse.com/reference/clean_team_abbrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize NFL Team Abbreviations — clean_team_abbrs","text":"","code":"x <- c(\"PIE\", \"LAR\", \"PIT\", \"CRD\", \"OAK\", \"SL\") # use current location and keep non matches clean_team_abbrs(x) #> [1] \"PIE\" \"LA\"  \"PIT\" \"ARI\" \"LV\"  \"LA\"   # keep old location and replace non matches clean_team_abbrs(x, current_location = FALSE, keep_non_matches = FALSE) #> [1] NA    \"LA\"  \"PIT\" \"ARI\" \"OAK\" \"STL\""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear function cache — clear_cache","title":"Clear function cache — clear_cache","text":"function clears memoised cache functions memoised nflreadr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear function cache — clear_cache","text":"","code":"clear_cache()  .clear_cache()"},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear function cache — clear_cache","text":"success message clearing cache.","code":""},{"path":"https://nflreadr.nflverse.com/reference/clear_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear function cache — clear_cache","text":"","code":"clear_cache() #> ✔ nflreadr function cache cleared!"},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .csv / .csv.gz file from a remote connection — csv_from_url","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"thin wrapper data.table::fread, memoised & cached twenty four hours.","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"","code":"csv_from_url(...)"},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"... Arguments passed data.table::fread input single character string. value inspected deferred either file= (\\n present), text= (least one \\n present) cmd= (\\n present, least one space present, file name). Exactly one input=, file=, text=, cmd= used call. file File name working directory, path file (passed path.expand convenience), URL starting http://, file://, etc. Compressed files extension .gz .bz2 supported R.utils package installed. text input data character vector one lines, example returned readLines(). cmd shell command pre-processes file; e.g. fread(cmd=paste(\"grep\",word,\"filename\")). See Details. sep separator columns. Defaults character set [,\\t |;:] separates sample rows number lines number fields. Use NULL \"\" specify separator; .e. line single character column like base::readLines . sep2 separator within columns. list column returned cell vector values. much faster using less working memory strsplit afterwards similar techniques. column sep2 can different first character set [,\\t |;], sep, exists inside field outside quoted regions sample. NB: sep2 yet implemented. nrows maximum number rows read. Unlike read.table, need set estimate number rows file better speed already automatically determined fread almost instantly using large sample lines. nrows=0 returns column names typed empty columns determined large sample; useful dry run large file quickly check format consistency set files starting read . header first data line contain column names? Defaults according whether every non-empty field first data line type character. , TRUE supplied, empty column names given default name. na.strings character vector strings interpreted NA values. default, \",,\" columns types, including type character read NA consistency. ,\"\", unambiguous read empty string. read ,NA, NA, set na.strings=\"NA\". read ,, blank string \"\", set na.strings=NULL. occur file, strings na.strings appear quoted since string literal ,\"NA\", distinguished ,NA,, example, na.strings=\"NA\". stringsAsFactors Convert character columns factors? verbose chatty report timings? skip 0 (default) start first line finds first row consistent number columns. automatically avoids irregular header information column names row. skip>0 means ignore first skip rows manually. skip=\"string\" searches \"string\" file (e.g. substring column names row) starts line (inspired read.xls package gdata). select vector column names numbers keep, drop rest. select may specify types way colClasses; .e., vector colname=type pairs, list type=col(s) pairs. forms select, order columns specified determines order columns result. drop Vector column names numbers drop, keep rest. colClasses utils::read.csv; .e., unnamed vector types corresponding columns file, named vector specifying types subset columns name. default, NULL means types inferred data file. , data.table supports named list vectors column names numbers list names class names; see examples. list form makes easier set batch columns particular class. column numbers used list form, refer column number file column number select drop applied.     type coercion results error, introduces NAs, result loss accuracy, coercion attempt aborted column warning column's type left unchanged. really desire data loss (e.g. reading 3.14 integer) truncate columns afterwards explicitly clear future readers code. integer64 \"integer64\" (default) reads columns detected containing integers larger 2^31 type bit64::integer64. Alternatively, \"double\"|\"numeric\" reads utils::read.csv ; .e., possibly loss precision silently. , \"character\". dec decimal separator utils::read.csv. \".\" (default) usually \",\". See details. col.names vector optional names variables (columns). default use header column present detected, \"V\" followed column number. applied check.names key index. check.names default FALSE. TRUE names variables data.table checked ensure syntactically valid variable names. necessary adjusted (make.names) , also ensure duplicates. encoding default \"unknown\". possible options \"UTF-8\" \"Latin-1\".  Note: used re-encode input, rather enables handling encoded strings native encoding. quote default (\"\\\"\"), field starts double quote, fread handles embedded quotes robustly explained Details. fails, another attempt made read field , .e., quotes disabled. setting quote=\"\", field always read quotes disabled. expected ever need pass anything \\\"\\\" quote; .e., turn . strip.white default TRUE. Strips leading trailing whitespaces unquoted fields. FALSE, header trailing spaces removed. fill logical (default FALSE). TRUE case rows unequal length, blank fields implicitly filled. blank.lines.skip logical, default FALSE. TRUE blank lines input ignored. key Character vector one column names passed setkey. may single comma separated string key=\"x,y,z\", vector names key=c(\"x\",\"y\",\"z\"). valid argument data.table=TRUE. applicable, refer column names given col.names. index Character vector list character vectors one column names passed setindexv. key, comma-separated notation like index=\"x,y,z\" accepted convenience. valid argument data.table=TRUE. applicable, refer column names given col.names. showProgress TRUE displays progress console ETA greater 3 seconds. produced fread's C code nice (R level) txtProgressBar tkProgressBar easily available. data.table TRUE returns data.table. FALSE returns data.frame. default argument can changed options(datatable.fread.datatable=FALSE). nThread number threads use. Experiment see works best data hardware. logical01 TRUE column containing 0s 1s read logical, otherwise integer. keepLeadingZeros TRUE column containing numeric data leading zeros read character, otherwise leading zeros removed converted numeric. yaml TRUE, fread attempt parse (using yaml.load) top input YAML, glean parameters relevant improving performance fread data . entire YAML section returned parsed list yaml_metadata attribute. See Details. autostart Deprecated ignored warning. Please use skip instead. tmpdir Directory use tmpdir argument tempfile calls, e.g. input URL shell command. default tempdir() can controlled setting TMPDIR starting R session; see base::tempdir. tz Relevant datetime values Z UTC-offset end, .e. unmarked datetime, written utils::write.csv. default tz=\"UTC\" reads unmarked datetime UTC POSIXct efficiently. tz=\"\" reads unmarked datetime type character (slowly) .POSIXct can interpret (slowly) character datetimes local timezone; e.g. using \"POSIXct\" colClasses=. Note fwrite() default writes datetime UTC including final Z therefore fwrite's output read fread consistently quickly without needing use tz= colClasses=. TZ environment variable set \"UTC\" (\"\" non-Windows unset vs `\"\"` significant) R session's timezone already UTC tz=\"\" result unmarked datetimes read UTC POSIXct. information, please see news items v1.13.0 v1.14.0.","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"dataframe created data.table::fread()","code":""},{"path":"https://nflreadr.nflverse.com/reference/csv_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .csv / .csv.gz file from a remote connection — csv_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   csv_from_url(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.csv\") }) #>       season draft_year           draft_team draft_round draft_ovr   pfr_id #>    1:   2000       2000        New York Jets           1        13 AbraJo00 #>    2:   2000       2000     Seattle Seahawks           1        19 AlexSh00 #>    3:   2000       2000   Kansas City Chiefs           6       188 AlfoDa20 #>    4:   2000         NA                               NA        NA          #>    5:   2000       2000    Carolina Panthers           1        23 AndeRa21 #>   ---                                                                       #> 7676:   2022       2022    Green Bay Packers           1        28 WyatDe00 #> 7677:   2022         NA                               NA        NA WydeJa00 #> 7678:   2022       2022     Cleveland Browns           4       124 YorkCa00 #> 7679:   2022         NA                               NA        NA          #> 7680:   2022       2022 New England Patriots           4       137 ZappBa00 #>                  cfb_id      player_name pos           school  ht  wt forty #>    1:                       John Abraham OLB   South Carolina 6-4 252  4.55 #>    2: shaun-alexander-1  Shaun Alexander  RB          Alabama 6-0 218  4.58 #>    3:                     Darnell Alford  OT      Boston Col. 6-4 334  5.56 #>    4:                       Kyle Allamon  TE       Texas Tech 6-2 253  4.97 #>    5:                   Rashard Anderson  CB    Jackson State 6-2 206  4.55 #>   ---                                                                       #> 7676:   devonte-wyatt-1    Devonte Wyatt  DT          Georgia 6-3 304  4.77 #> 7677: jalen-wydermyer-1  Jalen Wydermyer  TE        Texas A&M 6-4 255    NA #> 7678:       cade-york-1        Cade York   K              LSU 6-1 206    NA #> 7679:                        Nick Zakelj  OT          Fordham 6-6 316  5.13 #> 7680:    bailey-zappe-1     Bailey Zappe  QB Western Kentucky 6-1 215  4.88 #>       bench vertical broad_jump cone shuttle #>    1:    NA       NA         NA   NA      NA #>    2:    NA       NA         NA   NA      NA #>    3:    23     25.0         94 8.48    4.98 #>    4:    NA     29.0        104 7.29    4.49 #>    5:    NA     34.0        123 7.18    4.15 #>   ---                                        #> 7676:    NA     29.0        111   NA      NA #> 7677:    NA       NA         NA   NA      NA #> 7678:    12       NA         NA   NA      NA #> 7679:    27     28.5        110 7.75    4.71 #> 7680:    NA     30.0        109 7.19    4.40 # }"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Combine — dictionary_combine","title":"Data Dictionary: Combine — dictionary_combine","text":"dataframe containing data dictionary load_combine()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Combine — dictionary_combine","text":"","code":"dictionary_combine"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_combine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Combine — dictionary_combine","text":"object class data.frame 18 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Contracts — dictionary_contracts","title":"Data Dictionary: Contracts — dictionary_contracts","text":"dataframe containing data dictionary load_contracts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Contracts — dictionary_contracts","text":"","code":"dictionary_contracts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_contracts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Contracts — dictionary_contracts","text":"object class data.frame 15 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Depth Charts — dictionary_depth_charts","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"dataframe containing data dictionary load_depth_charts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"","code":"dictionary_depth_charts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_depth_charts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Depth Charts — dictionary_depth_charts","text":"object class data.frame 13 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Draft Picks — dictionary_draft_picks","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"dataframe containing data dictionary load_draft_picks()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"","code":"dictionary_draft_picks"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_draft_picks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Draft Picks — dictionary_draft_picks","text":"object class data.frame 36 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"dataframe containing data dictionary load_espn_qbr()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"","code":"dictionary_espn_qbr"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_espn_qbr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: ESPN QBR — dictionary_espn_qbr","text":"object class data.frame 23 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"dataframe containing data dictionary load_ff_opportunity()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"","code":"dictionary_ff_opportunity"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_opportunity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Expected Fantasy Points — dictionary_ff_opportunity","text":"object class data.frame 218 rows 4 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"dataframe containing data dictionary load_ff_playerids()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"","code":"dictionary_ff_playerids"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_playerids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Fantasy Player IDs — dictionary_ff_playerids","text":"object class data.frame 35 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"dataframe containing data dictionary load_ff_rankings()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"","code":"dictionary_ff_rankings"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_ff_rankings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Fantasy Football Rankings — dictionary_ff_rankings","text":"object class data.frame 25 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Injuries — dictionary_injuries","title":"Data Dictionary: Injuries — dictionary_injuries","text":"dataframe containing data dictionary load_injuries()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Injuries — dictionary_injuries","text":"","code":"dictionary_injuries"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Injuries — dictionary_injuries","text":"object class data.frame 16 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"dataframe containing data dictionary load_nextgen_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"","code":"dictionary_nextgen_stats"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_nextgen_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Next Gen Stats — dictionary_nextgen_stats","text":"object class data.frame 51 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Participation — dictionary_participation","title":"Data Dictionary: Participation — dictionary_participation","text":"dataframe containing data dictionary load_participation()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Participation — dictionary_participation","text":"","code":"dictionary_participation"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_participation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Participation — dictionary_participation","text":"object class data.frame 14 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Play by Play — dictionary_pbp","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"dataframe containing data dictionary load_pbp()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"","code":"dictionary_pbp"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pbp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Play by Play — dictionary_pbp","text":"object class data.frame 372 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: PFR Passing — dictionary_pfr_passing","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"dataframe containing data dictionary load_pfr_passing()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"","code":"dictionary_pfr_passing"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_pfr_passing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: PFR Passing — dictionary_pfr_passing","text":"object class data.frame 28 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Player Stats — dictionary_player_stats","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"dataframe containing data dictionary load_player_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"","code":"dictionary_player_stats"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Player Stats — dictionary_player_stats","text":"object class data.frame 48 rows 2 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"dataframe containing data dictionary load_player_stats()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"","code":"dictionary_player_stats_def"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_player_stats_def.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Player Stats Defense — dictionary_player_stats_def","text":"object class data.frame 22 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Rosters — dictionary_rosters","title":"Data Dictionary: Rosters — dictionary_rosters","text":"dataframe containing data dictionary load_rosters()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Rosters — dictionary_rosters","text":"","code":"dictionary_rosters"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_rosters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Rosters — dictionary_rosters","text":"object class data.frame 25 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Schedules — dictionary_schedules","title":"Data Dictionary: Schedules — dictionary_schedules","text":"dataframe containing data dictionary load_schedules()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Schedules — dictionary_schedules","text":"","code":"dictionary_schedules"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_schedules.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Schedules — dictionary_schedules","text":"object class data.frame 45 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Snap Counts — dictionary_snap_counts","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"dataframe containing data dictionary load_snap_counts()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"","code":"dictionary_snap_counts"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_snap_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Snap Counts — dictionary_snap_counts","text":"object class data.frame 16 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Dictionary: Trades — dictionary_trades","title":"Data Dictionary: Trades — dictionary_trades","text":"dataframe containing data dictionary load_trades()","code":""},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Dictionary: Trades — dictionary_trades","text":"","code":"dictionary_trades"},{"path":"https://nflreadr.nflverse.com/reference/dictionary_trades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Dictionary: Trades — dictionary_trades","text":"object class data.frame 11 rows 3 columns.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Current Week — get_current_week","title":"Get Current Week — get_current_week","text":"helper function returns upcoming NFL regular season week based either nflverse schedules file (found load_schedules()) date-based heuristics (number weeks since first Monday September)","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Current Week — get_current_week","text":"","code":"get_current_week(use_date = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Current Week — get_current_week","text":"use_date logical determine whether use date-based heuristics determine current week, default FALSE (.e. uses schedule file)","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Current Week — get_current_week","text":"current nfl regular season week numeric","code":""},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Current Week — get_current_week","text":"Note date heuristic count new week starting Thursdays, schedule-based method count new week last game previous week, e.g. MNF completed. Tan Ben argued .","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/get_current_week.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Current Week — get_current_week","text":"","code":"{   # \\donttest{     try({ # schedules file as per default requires online access     get_current_week()     })   # }   # using the date method works offline   get_current_week(use_date = TRUE) } #> [1] 22"},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":null,"dir":"Reference","previous_headings":"","what":"Coalescing join — join_coalesce","title":"Coalescing join — join_coalesce","text":"EXPERIMENTAL! function joins two dataframes together key, coalesces columns shared names (.e. fills NAs). utility function primarily used internally within nflverse help build player IDs","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coalescing join — join_coalesce","text":"","code":"join_coalesce(   x,   y,   by = NULL,   type = c(\"left\", \"inner\", \"full\"),   ...,   by.x = NULL,   by.y = NULL,   sort = TRUE,   incomparables = c(NA, NaN) )"},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coalescing join — join_coalesce","text":"x, y dataframes. coerced data.table keys join , plain named character vector type one \"left\" (rows x matching rows y), \"inner\" (matching rows x y), \"full\" (rows x y) ... args passed merge.data.frame() .x, .y alternate form keys join - provided, override . sort whether sort output join keys incomparables keys match , .e. NA match NA.","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coalescing join — join_coalesce","text":"data.table joining x y dataframes together, every column x y patching NA values x y.","code":""},{"path":"https://nflreadr.nflverse.com/reference/join_coalesce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coalescing join — join_coalesce","text":"","code":"x <- data.frame(id1 = c(NA_character_,letters[1:4]), a = c(1,NA,3,NA,5), b = 1:5 * 10) y <- data.frame(id2 = c(letters[3:11],NA_character_), a = -(1:10), c = 1:10 * 100)  join_coalesce(x,y, by = c(\"id1\"=\"id2\")) #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>     id1  a  b   c #> 1:    a NA 20  NA #> 2:    b  3 30  NA #> 3:    c -1 40 100 #> 4:    d  5 50 200 #> 5: <NA>  1 10  NA join_coalesce(x,y, by.x = \"id1\", by.y = \"id2\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>     id1  a  b   c #> 1:    a NA 20  NA #> 2:    b  3 30  NA #> 3:    c -1 40 100 #> 4:    d  5 50 200 #> 5: <NA>  1 10  NA join_coalesce(x,y, by = c(\"id1\"=\"id2\"), type = \"inner\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>    id1  a  b   c #> 1:   c -1 40 100 #> 2:   d  5 50 200 join_coalesce(x,y, by = c(\"id1\"=\"id2\"), type = \"full\") #> Warning: Join `by` keys in x have NAs #> Join `by` keys in y have NAs #>      id1   a  b    c #>  1:    a  NA 20   NA #>  2:    b   3 30   NA #>  3:    c  -1 40  100 #>  4:    d   5 50  200 #>  5:    e  -3 NA  300 #>  6:    f  -4 NA  400 #>  7:    g  -5 NA  500 #>  8:    h  -6 NA  600 #>  9:    i  -7 NA  700 #> 10:    j  -8 NA  800 #> 11:    k  -9 NA  900 #> 12: <NA>   1 10   NA #> 13: <NA> -10 NA 1000"},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Latest Season — most_recent_season","title":"Get Latest Season — most_recent_season","text":"helper function choose recent season available given dataset","code":""},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Latest Season — most_recent_season","text":"","code":"most_recent_season(roster = FALSE)  get_latest_season(roster = FALSE)  get_current_season(roster = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Latest Season — most_recent_season","text":"roster TRUE/FALSE flag: TRUE, returns current year March 15th later. FALSE, returns current year September 1st later. Otherwise returns current year minus 1.","code":""},{"path":"https://nflreadr.nflverse.com/reference/latest_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Latest Season — most_recent_season","text":"recent season (four digit numeric)","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Combine Data from PFR — load_combine","title":"Load Combine Data from PFR — load_combine","text":"Loads combine data since 2000 courtesy PFR.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Combine Data from PFR — load_combine","text":"","code":"load_combine(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Combine Data from PFR — load_combine","text":"seasons numeric vector seasons return, default TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Combine Data from PFR — load_combine","text":"tibble NFL combine data provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Combine Data from PFR — load_combine","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_combine() }) #> ── nflverse combine measurements ─────────────────────────────────────────────── #> ℹ Data updated: 2023-05-08 22:18:55 UTC #> # A tibble: 7,999 × 18 #>    season draft_year draft_team  draft_round draft_ovr pfr_id cfb_id player_name #>     <int>      <dbl> <chr>             <dbl>     <dbl> <chr>  <chr>  <chr>       #>  1   2000       2000 New York J…           1        13 AbraJ… NA     John Abrah… #>  2   2000       2000 Seattle Se…           1        19 AlexS… shaun… Shaun Alex… #>  3   2000       2000 Kansas Cit…           6       188 AlfoD… NA     Darnell Al… #>  4   2000         NA NA                   NA        NA NA     NA     Kyle Allam… #>  5   2000       2000 Carolina P…           1        23 AndeR… NA     Rashard An… #>  6   2000         NA NA                   NA        NA arian… NA     Jake Arians #>  7   2000       2000 Washington…           1         2 ArriL… lavar… LaVar Arri… #>  8   2000         NA NA                   NA        NA AtkiC… NA     Corey Atki… #>  9   2000         NA NA                   NA        NA NA     NA     Kyle Atteb… #> 10   2000       2000 Chicago Be…           4       125 AustR… NA     Reggie Aus… #> # ℹ 7,989 more rows #> # ℹ 10 more variables: pos <chr>, school <chr>, ht <chr>, wt <dbl>, #> #   forty <dbl>, bench <dbl>, vertical <dbl>, broad_jump <dbl>, cone <dbl>, #> #   shuttle <dbl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Historical Player Contracts from OverTheCap.com — load_contracts","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"Loads player contracts OverTheCap.com","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"","code":"load_contracts(file_type = getOption(\"nflreadr.prefer\", default = \"rds\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"file_type One \"rds\", \"qs\", \"csv\", \"parquet\". Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"tibble active non-active NFL player contracts.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_contracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Historical Player Contracts from OverTheCap.com — load_contracts","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_contracts() }) #> ── nflverse Historical Contract Data from OverTheCap.com ─────────────────────── #> ℹ Data updated: 2023-08-07 07:16:38 UTC #> # A tibble: 36,950 × 24 #>    player      position team  is_active year_signed years value   apy guaranteed #>    <chr>       <chr>    <chr> <lgl>           <int> <int> <dbl> <dbl>      <dbl> #>  1 Aaron Rodg… QB       GB/N… FALSE            2022     5  151.  50.3       151. #>  2 Josh Allen  QB       Bills TRUE             2021     6  258   43         150  #>  3 Russell Wi… QB       Bron… TRUE             2022     5  245   49         165  #>  4 Justin Her… QB       Char… TRUE             2023     5  262.  52.5       194. #>  5 Lamar Jack… QB       Rave… TRUE             2023     5  260   52         185  #>  6 Patrick Ma… QB       Chie… TRUE             2020    10  450   45         141  #>  7 Jalen Hurts QB       Eagl… TRUE             2023     5  255   51         179. #>  8 Kyler Murr… QB       Card… TRUE             2022     5  230.  46.1       160  #>  9 Deshaun Wa… QB       Brow… TRUE             2022     5  230   46         230  #> 10 Dak Presco… QB       Cowb… TRUE             2021     4  160   40         126  #> # ℹ 36,940 more rows #> # ℹ 15 more variables: apy_cap_pct <dbl>, inflated_value <dbl>, #> #   inflated_apy <dbl>, inflated_guaranteed <dbl>, player_page <chr>, #> #   otc_id <int>, date_of_birth <chr>, height <chr>, weight <chr>, #> #   college <chr>, draft_year <int>, draft_round <int>, draft_overall <int>, #> #   draft_team <chr>, cols <list> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Weekly Depth Charts — load_depth_charts","title":"Load Weekly Depth Charts — load_depth_charts","text":"Loads depth charts NFL team week back 2001.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Weekly Depth Charts — load_depth_charts","text":"","code":"load_depth_charts(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Weekly Depth Charts — load_depth_charts","text":"seasons numeric vector specifying seasons return, TRUE returns available data. Defaults latest season. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Weekly Depth Charts — load_depth_charts","text":"tibble week-level depth charts team.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_depth_charts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Weekly Depth Charts — load_depth_charts","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_depth_charts(2020) }) #> ── nflverse depth charts ─────────────────────────────────────────────────────── #> ℹ Data updated: 2022-08-02 01:40:11 UTC #> # A tibble: 36,168 × 15 #>    season club_code  week game_type depth_team last_name first_name #>     <dbl> <chr>     <dbl> <chr>     <chr>      <chr>     <chr>      #>  1   2020 ATL           1 REG       2          Schaub    Matt       #>  2   2020 ATL           2 REG       2          Schaub    Matt       #>  3   2020 ATL           3 REG       2          Schaub    Matt       #>  4   2020 ATL           4 REG       2          Schaub    Matt       #>  5   2020 ATL           5 REG       2          Schaub    Matt       #>  6   2020 ATL           6 REG       2          Schaub    Matt       #>  7   2020 ATL           7 REG       2          Schaub    Matt       #>  8   2020 ATL           8 REG       2          Schaub    Matt       #>  9   2020 ATL           9 REG       2          Schaub    Matt       #> 10   2020 ATL          10 REG       2          Schaub    Matt       #> # ℹ 36,158 more rows #> # ℹ 8 more variables: football_name <chr>, formation <chr>, gsis_id <chr>, #> #   jersey_number <chr>, position <chr>, elias_id <chr>, depth_position <chr>, #> #   full_name <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Draft Picks from PFR — load_draft_picks","title":"Load Draft Picks from PFR — load_draft_picks","text":"Loads every draft pick since 1980 courtesy PFR.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Draft Picks from PFR — load_draft_picks","text":"","code":"load_draft_picks(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Draft Picks from PFR — load_draft_picks","text":"seasons numeric vector seasons return, default TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Draft Picks from PFR — load_draft_picks","text":"tibble NFL draft picks provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_draft_picks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Draft Picks from PFR — load_draft_picks","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_draft_picks() }) #> ── nflverse Draft Picks, via Pro Football Reference ──────────────────────────── #> ℹ Data updated: 2023-07-05 13:33:15 UTC #> # A tibble: 12,156 × 36 #>    season round  pick team  gsis_id pfr_player_id cfb_player_id  pfr_player_name #>     <int> <int> <int> <chr> <chr>   <chr>         <chr>          <chr>           #>  1   1980     1     1 DET   \"\"      SimsBi00      \"billy-sims-1\" Billy Sims      #>  2   1980     1     2 NYJ   \"\"      JoneLa00      \"lam-jones-1\"  Lam Jones       #>  3   1980     1     3 CIN   \"\"      MunoAn00      \"\"             Anthony Munoz   #>  4   1980     1     4 GNB   \"\"      ClarBr23      \"bruce-clark-… Bruce Clark     #>  5   1980     1     5 BAL   \"\"      DickCu00      \"curtis-dicke… Curtis Dickey   #>  6   1980     1     6 STL   \"\"      GreeCu21      \"curtis-greer… Curtis Greer    #>  7   1980     1     7 ATL   \"\"      MillJu00      \"junior-mille… Junior Miller   #>  8   1980     1     8 NYG   \"\"      HaynMa00      \"mark-haynes-… Mark Haynes     #>  9   1980     1     9 MIN   \"\"      MartDo21      \"\"             Doug Martin     #> 10   1980     1    10 SEA   \"\"      GreeJa01      \"jacob-green-… Jacob Green     #> # ℹ 12,146 more rows #> # ℹ 28 more variables: hof <lgl>, position <chr>, category <chr>, side <chr>, #> #   college <chr>, age <int>, to <int>, allpro <int>, probowls <int>, #> #   seasons_started <int>, w_av <int>, car_av <lgl>, dr_av <int>, games <int>, #> #   pass_completions <int>, pass_attempts <int>, pass_yards <int>, #> #   pass_tds <int>, pass_ints <int>, rush_atts <int>, rush_yards <int>, #> #   rush_tds <int>, receptions <int>, rec_yards <int>, rec_tds <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Load ESPN's QBR — load_espn_qbr","title":"Load ESPN's QBR — load_espn_qbr","text":"Load ESPN's QBR","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load ESPN's QBR — load_espn_qbr","text":"","code":"load_espn_qbr(   league = c(\"nfl\", \"college\"),   seasons = most_recent_season(),   summary_type = c(\"season\", \"weekly\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load ESPN's QBR — load_espn_qbr","text":"league One \"nfl\" \"college\", defaults \"nfl\" seasons numeric vector seasons return, data available since 2006. Defaults latest season available. TRUE select seasons. summary_type One \"season\" \"weekly\", defaults season","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load ESPN's QBR — load_espn_qbr","text":"tibble season-level injury report data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_espn_qbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load ESPN's QBR — load_espn_qbr","text":"","code":"# \\donttest{     load_espn_qbr(\"nfl\",2020) #> ── nflverse QBR (via ESPN/espnscrapeR) ───────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:10 UTC #> # A tibble: 84 × 23 #>    season season_type game_week    team_abb player_id name_short  rank qbr_total #>     <dbl> <chr>       <chr>        <chr>    <chr>     <chr>      <dbl>     <dbl> #>  1   2020 Regular     Season Total GB       8439      A. Rodgers     1      84.3 #>  2   2020 Regular     Season Total KC       3139477   P. Mahomes     2      82.9 #>  3   2020 Regular     Season Total BUF      3918298   J. Allen       3      81.7 #>  4   2020 Regular     Season Total TEN      14876     R. Tanneh…     4      78.3 #>  5   2020 Regular     Season Total MIA      8664      R. Fitzpa…     5      76.8 #>  6   2020 Regular     Season Total NO       2580      D. Brees       6      74.6 #>  7   2020 Regular     Season Total BAL      3916387   L. Jackson     7      73.7 #>  8   2020 Regular     Season Total SEA      14881     R. Wilson      8      73.5 #>  9   2020 Regular     Season Total TB       2330      T. Brady       9      72.5 #> 10   2020 Regular     Season Total CLE      3052587   B. Mayfie…    10      72.2 #> # ℹ 74 more rows #> # ℹ 15 more variables: pts_added <dbl>, qb_plays <dbl>, epa_total <dbl>, #> #   pass <dbl>, run <dbl>, exp_sack <dbl>, penalty <dbl>, qbr_raw <dbl>, #> #   sack <dbl>, name_first <chr>, name_last <chr>, name_display <chr>, #> #   headshot_href <chr>, team <chr>, qualified <lgl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Expected Fantasy Points — load_ff_opportunity","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"function downloads precomputed expected points data ffopportunity automated releases.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"","code":"load_ff_opportunity(   seasons = most_recent_season(),   stat_type = c(\"weekly\", \"pbp_pass\", \"pbp_rush\"),   model_version = c(\"latest\", \"v1.0.0\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"seasons numeric vector seasons return, defaults recent season. set TRUE, returns available data. stat_type one \"weekly\", \"pbp_pass\", \"pbp_rush\" model_version one \"latest\" \"v1.0.0\"","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"Precomputed expected fantasy points data ffopportunity automated releases.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_opportunity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Expected Fantasy Points — load_ff_opportunity","text":"","code":"# \\donttest{   try({ # prevents cran errors   load_ff_opportunity()   load_ff_opportunity(seasons = 2021, stat_type = \"pbp_pass\", model_version = \"v1.0.0\")   }) #> ── nflverse ffopportunity expected points: pbp_pass ──────────────────────────── #> ℹ Data updated: 2022-09-27 11:35:02 UTC #> # A tibble: 19,769 × 57 #>    game_id       play_id desc  passer_player_id passer_full_name passer_position #>    <chr>           <dbl> <chr> <chr>            <chr>            <chr>           #>  1 2021_01_ARI_…      76 (14:… 00-0029701       Ryan Tannehill   QB              #>  2 2021_01_ARI_…     100 (13:… 00-0029701       Ryan Tannehill   QB              #>  3 2021_01_ARI_…     152 (13:… 00-0035228       Kyler Murray     QB              #>  4 2021_01_ARI_…     218 (12:… 00-0035228       Kyler Murray     QB              #>  5 2021_01_ARI_…     253 (11:… 00-0035228       Kyler Murray     QB              #>  6 2021_01_ARI_…     386 (10:… 00-0035228       Kyler Murray     QB              #>  7 2021_01_ARI_…     410 (9:2… 00-0035228       Kyler Murray     QB              #>  8 2021_01_ARI_…     599 (8:3… 00-0035228       Kyler Murray     QB              #>  9 2021_01_ARI_…     621 (8:2… 00-0035228       Kyler Murray     QB              #> 10 2021_01_ARI_…     660 (8:1… 00-0035228       Kyler Murray     QB              #> # ℹ 19,759 more rows #> # ℹ 51 more variables: receiver_player_id <chr>, receiver_full_name <chr>, #> #   receiver_position <chr>, posteam <chr>, two_point_attempt <dbl>, #> #   two_point_converted <dbl>, pass_attempt <dbl>, receiving_yards <dbl>, #> #   first_down_pass <dbl>, fumble_lost <dbl>, season <int>, week <int>, #> #   complete_pass <fct>, yards_after_catch <dbl>, pass_touchdown <fct>, #> #   first_down <fct>, interception <fct>, relative_to_endzone <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Fantasy Player IDs — load_ff_playerids","title":"Load Fantasy Player IDs — load_ff_playerids","text":"Accesses DynastyProcess.com's database fantasy football player IDs, help connect nflverse various platforms IDs.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Fantasy Player IDs — load_ff_playerids","text":"","code":"load_ff_playerids()"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Fantasy Player IDs — load_ff_playerids","text":"dataframe player IDs","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_playerids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Fantasy Player IDs — load_ff_playerids","text":"","code":"# \\donttest{ try({ # prevents cran errors load_ff_playerids() }) #> ── nflverse (ffverse) player IDs ─────────────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:14 UTC #> # A tibble: 11,310 × 35 #>    mfl_id sportradar_id  fantasypros_id gsis_id pff_id sleeper_id nfl_id espn_id #>    <chr>  <chr>          <chr>          <chr>   <chr>  <chr>      <chr>  <chr>   #>  1 15702  93147c90-09c8… 24740          NA      NA     9230       NA     NA      #>  2 16148  38475bfa-9773… 22900          NA      NA     9228       NA     NA      #>  3 16149  4c8a2f7e-f982… 22987          NA      NA     9999       NA     NA      #>  4 16150  7e91086f-9ca4… 23071          NA      NA     9758       NA     NA      #>  5 16151  25b10007-802d… 24332          NA      NA     9998       NA     NA      #>  6 16152  5fc5b4a6-a583… 24347          NA      NA     9229       NA     NA      #>  7 16153  a5cc5958-01f9… 23927          NA      NA     10857      NA     NA      #>  8 16154  84ba4cc6-8740… 24073          NA      NA     9231       NA     NA      #>  9 16155  a7ef9eec-dab5… 23121          NA      NA     10233      NA     NA      #> 10 16156  70376919-8220… 24728          NA      NA     10215      NA     NA      #> # ℹ 11,300 more rows #> # ℹ 27 more variables: yahoo_id <chr>, fleaflicker_id <chr>, cbs_id <chr>, #> #   rotowire_id <chr>, rotoworld_id <chr>, ktc_id <chr>, pfr_id <chr>, #> #   cfbref_id <chr>, stats_id <chr>, stats_global_id <chr>, #> #   fantasy_data_id <chr>, swish_id <chr>, name <chr>, merge_name <chr>, #> #   position <chr>, team <chr>, birthdate <date>, age <dbl>, draft_year <int>, #> #   draft_round <int>, draft_pick <int>, draft_ovr <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Latest FantasyPros Rankings — load_ff_rankings","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"Accesses DynastyProcess.com's repository latest FP expert consensus rankings - updated weekly basis.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"","code":"load_ff_rankings(type = c(\"draft\", \"week\", \"all\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"type one \"draft\" (preseason), \"week\" (week, inseason), \"\" (full archive)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"dataframe expert consensus rankings","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_ff_rankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Latest FantasyPros Rankings — load_ff_rankings","text":"","code":"# \\donttest{ try({ # prevents cran errors load_ff_rankings() }) #> ── nflverse FP expert rankings ───────────────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:15 UTC #> # A tibble: 6,493 × 25 #>    fp_page   page_type ecr_type player id    pos   team    ecr    sd  best worst #>    <chr>     <chr>     <chr>    <chr>  <chr> <chr> <chr> <dbl> <dbl> <dbl> <dbl> #>  1 /nfl/ran… best-dst  bp       San F… 8270  DST   SF     2     1.41     1     4 #>  2 /nfl/ran… best-dst  bp       Dalla… 8080  DST   DAL    2     0.82     1     3 #>  3 /nfl/ran… best-dst  bp       Buffa… 8030  DST   BUF    3.67  1.7      2     6 #>  4 /nfl/ran… best-dst  bp       Phila… 8230  DST   PHI    5.33  1.89     4     8 #>  5 /nfl/ran… best-dst  bp       Denve… 8090  DST   DEN    6.67  1.25     5     8 #>  6 /nfl/ran… best-dst  bp       New Y… 8210  DST   NYJ    7.33  3.86     2    11 #>  7 /nfl/ran… best-dst  bp       New E… 8180  DST   NE     7.67  3.77     5    13 #>  8 /nfl/ran… best-dst  bp       Balti… 8020  DST   BAL    8     1.63     6    10 #>  9 /nfl/ran… best-dst  bp       New O… 8190  DST   NO     9     4.55     3    14 #> 10 /nfl/ran… best-dst  bp       Kansa… 8150  DST   KC    10.3   1.89     9    13 #> # ℹ 6,483 more rows #> # ℹ 14 more variables: sportsdata_id <chr>, player_filename <chr>, #> #   yahoo_id <chr>, cbs_id <chr>, player_owned_avg <dbl>, #> #   player_owned_espn <dbl>, player_owned_yahoo <dbl>, player_image_url <chr>, #> #   player_square_image_url <chr>, rank_delta <dbl>, bye <dbl>, #> #   mergename <chr>, scrape_date <date>, tm <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"Load rds/csv/csv.gz/parquet/qs file remote URL","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"","code":"load_from_url(url, ..., seasons = TRUE, nflverse = FALSE)"},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"url vector URLs load memory. one URL provided, row-bind . ... named arguments added attributes data, e.g. nflverse_type = \"pbp\" seasons numeric vector years used filter dataframe's season column. TRUE (default), filter. nflverse TRUE add nflverse_data classing attributes.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"dataframe, possibly type nflverse_data","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load any rds/csv/csv.gz/parquet/qs file from a remote URL — load_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   urls <- c(\"https://github.com/nflverse/nflverse-data/releases/download/rosters/roster_2020.csv\",             \"https://github.com/nflverse/nflverse-data/releases/download/rosters/roster_2021.csv\")  load_from_url(urls, nflverse = TRUE, nflverse_type = \"rosters for 2020 & 2021\") }) #> ── nflverse rosters for 2020 & 2021 ──────────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:16 UTC #> # A tibble: 5,379 × 36 #>    season team  position depth_chart_position jersey_number status     full_name #>     <int> <chr> <chr>    <chr>                        <int> <chr>      <chr>     #>  1   2020 ARI   DB       CB                              25 R/Injured  Johnatha… #>  2   2020 ARI   DB       CB                              21 Active     Patrick … #>  3   2020 ARI   DB       CB                              20 PS; Vet    Prince A… #>  4   2020 ARI   DB       CB                              20 Active     Dre Kirk… #>  5   2020 ARI   DB       FS                              31 R/COVID-19 Chris Ba… #>  6   2020 ARI   DB       CB                              23 R/Injured  Robert A… #>  7   2020 ARI   DB       FS                              28 Active     Charles … #>  8   2020 ARI   DB       CB                              27 Active     Kevin Pe… #>  9   2020 ARI   DB       SS                              32 Active     Budda Ba… #> 10   2020 ARI   DB       CB                              33 Active     Byron Mu… #> # ℹ 5,369 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <IDate>, #> #   height <int>, weight <int>, college <chr>, gsis_id <chr>, espn_id <int>, #> #   sportradar_id <chr>, yahoo_id <int>, rotowire_id <int>, pff_id <int>, #> #   pfr_id <chr>, fantasy_data_id <int>, sleeper_id <int>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Injury Reports — load_injuries","title":"Load Injury Reports — load_injuries","text":"Data collected API weekly injury report data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Injury Reports — load_injuries","text":"","code":"load_injuries(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Injury Reports — load_injuries","text":"seasons numeric vector seasons return, data available since 2009. Defaults latest season available. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Injury Reports — load_injuries","text":"tibble season-level injury report data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_injuries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Injury Reports — load_injuries","text":"","code":"# \\donttest{ try({# prevents cran errors     load_injuries(2020) }) #> ── nflverse injury & practice reports ────────────────────────────────────────── #> ℹ Data updated: 2022-07-26 05:23:25 UTC #> # A tibble: 5,661 × 16 #>    season game_type team   week gsis_id  position full_name first_name last_name #>     <dbl> <chr>     <chr> <dbl> <chr>    <chr>    <chr>     <chr>      <chr>     #>  1   2020 REG       ARI       1 00-0035… WR       KeeSean … KeeSean    Johnson   #>  2   2020 REG       ARI       1 00-0022… WR       Larry Fi… Larry      Fitzgera… #>  3   2020 REG       ARI       1 00-0030… WR       DeAndre … DeAndre    Hopkins   #>  4   2020 REG       ARI       1 00-0031… TE       Maxx Wil… Maxx       Williams  #>  5   2020 REG       ARI       1 00-0036… T        Josh Jon… Josh       Jones     #>  6   2020 REG       ATL       1 00-0027… G        James Ca… James      Carpenter #>  7   2020 REG       ATL       1 00-0032… RB       Todd Gur… Todd       Gurley    #>  8   2020 REG       ATL       1 00-0026… C        Alex Mack Alex       Mack      #>  9   2020 REG       ATL       1 00-0032… DE       Dante Fo… Dante      Fowler    #> 10   2020 REG       ATL       1 00-0034… WR       Russell … Russell    Gage      #> # ℹ 5,651 more rows #> # ℹ 7 more variables: report_primary_injury <chr>, #> #   report_secondary_injury <chr>, report_status <chr>, #> #   practice_primary_injury <chr>, practice_secondary_injury <chr>, #> #   practice_status <chr>, date_modified <dttm> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"Loads player level weekly stats provided NFL Next Gen Stats starting 2016 season. Three different stat types available current season's data updates every night. NGS provide data players minimum number pass/rush/rec attempts.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"","code":"load_nextgen_stats(   seasons = TRUE,   stat_type = c(\"passing\", \"receiving\", \"rushing\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"seasons numeric vector specifying seasons return, TRUE returns available data stat_type one \"passing\", \"receiving\", \"rushing\" file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"tibble week-level player statistics provided NFL Next Gen Stats. Regular season summary given week == 0.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_nextgen_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Player Level Weekly NFL Next Gen Stats — load_nextgen_stats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_nextgen_stats(stat_type = \"passing\")   load_nextgen_stats(stat_type = \"receiving\")   load_nextgen_stats(stat_type = \"rushing\") }) #> ── nflverse Next Gen Stats weekly rushing data ───────────────────────────────── #> ℹ Data updated: 2023-02-28 07:17:30 UTC #> # A tibble: 4,186 × 22 #>    season season_type  week player_display_name player_position team_abbr #>     <int> <chr>       <int> <chr>               <chr>           <chr>     #>  1   2016 REG             0 David Johnson       RB              ARI       #>  2   2016 REG             0 Latavius Murray     RB              LV        #>  3   2016 REG             0 Paul Perkins        RB              NYG       #>  4   2016 REG             0 Jonathan Stewart    RB              CAR       #>  5   2016 REG             0 LeSean McCoy        RB              BUF       #>  6   2016 REG             0 Tim Hightower       RB              NO        #>  7   2016 REG             0 C.J. Anderson       RB              DEN       #>  8   2016 REG             0 Matt Asiata         RB              MIN       #>  9   2016 REG             0 Doug Martin         RB              TB        #> 10   2016 REG             0 Jay Ajayi           RB              MIA       #> # ℹ 4,176 more rows #> # ℹ 16 more variables: efficiency <dbl>, #> #   percent_attempts_gte_eight_defenders <dbl>, avg_time_to_los <dbl>, #> #   rush_attempts <int>, rush_yards <int>, expected_rush_yards <dbl>, #> #   rush_yards_over_expected <dbl>, avg_rush_yards <dbl>, #> #   rush_yards_over_expected_per_att <dbl>, rush_pct_over_expected <dbl>, #> #   rush_touchdowns <int>, player_gsis_id <chr>, player_first_name <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Officials — load_officials","title":"Load Officials — load_officials","text":"Loads data officials assigned oversee specific game. Data available 2015 onwards.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Officials — load_officials","text":"","code":"load_officials(   seasons = TRUE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Officials — load_officials","text":"seasons numeric vector specifying seasons return, TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Officials — load_officials","text":"tibble one row per game per official.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_officials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Officials — load_officials","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_officials() }) #> ── nflverse officials ────────────────────────────────────────────────────────── #> ℹ Data updated: 2023-02-02 07:02:37 UTC #> # A tibble: 15,712 × 9 #>    game_id    game_key official_name  position  jersey_number official_id season #>    <chr>      <chr>    <chr>          <chr>             <int> <chr>        <int> #>  1 2015091000 56503    Brad Freeman   Field Ju…            88 25            2015 #>  2 2015091000 56503    Kent Payne     Head Lin…            79 28            2015 #>  3 2015091000 56503    Terrence Miles Back Jud…           111 139           2015 #>  4 2015091000 56503    Tim Podraza    Line Jud…            47 123           2015 #>  5 2015091000 56503    Scott Novak    Side Jud…             1 94            2015 #>  6 2015091000 56503    Undrey Wash    Umpire               96 134           2015 #>  7 2015091000 56503    Carl Cheffers  Referee              51 3             2015 #>  8 2015091300 56505    Lee Dyer       Back Jud…            27 72            2015 #>  9 2015091300 56505    Steve Zimmer   Field Ju…            33 116           2015 #> 10 2015091300 56505    Mark Hittner   Head Lin…            28 118           2015 #> # ℹ 15,702 more rows #> # ℹ 2 more variables: season_type <chr>, week <int> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Participation Data — load_participation","title":"Load Participation Data — load_participation","text":"Loads participation data nflverse-data repository","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Participation Data — load_participation","text":"","code":"load_participation(   seasons = most_recent_season(),   include_pbp = FALSE,   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Participation Data — load_participation","text":"seasons numeric vector 4-digit years associated given NFL seasons - defaults latest season. set TRUE, returns available data since 2016. include_pbp logical: download join pbp data? file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Participation Data — load_participation","text":"dataframe participation data, optionally merged play play","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_participation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Participation Data — load_participation","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_participation(seasons = 2020, include_pbp = TRUE) }) #> ── nflverse play-by-play participation ───────────────────────────────────────── #> ℹ Data updated: 2022-09-13 15:07:16 UTC #> # A tibble: 48,145 × 383 #>    nflverse_game_id play_id possession_team offense_formation offense_personnel #>    <chr>              <int> <chr>           <chr>             <chr>             #>  1 2020_01_ARI_SF         1 \"\"              NA                NA                #>  2 2020_01_ARI_SF        39 \"ARI\"           NA                NA                #>  3 2020_01_ARI_SF        54 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  4 2020_01_ARI_SF        93 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  5 2020_01_ARI_SF       118 \"SF\"            SINGLEBACK        2 RB, 1 TE, 2 WR  #>  6 2020_01_ARI_SF       143 \"SF\"            SHOTGUN           2 RB, 1 TE, 2 WR  #>  7 2020_01_ARI_SF       165 \"SF\"            SHOTGUN           1 RB, 1 TE, 3 WR  #>  8 2020_01_ARI_SF       197 \"SF\"            NA                NA                #>  9 2020_01_ARI_SF       226 \"SF\"            NA                NA                #> 10 2020_01_ARI_SF       245 \"ARI\"           SHOTGUN           1 RB, 1 TE, 3 WR  #> # ℹ 48,135 more rows #> # ℹ 378 more variables: defenders_in_box <int>, defense_personnel <chr>, #> #   number_of_pass_rushers <int>, players_on_play <chr>, offense_players <chr>, #> #   defense_players <chr>, n_offense <int>, n_defense <int>, old_game_id <chr>, #> #   home_team <chr>, away_team <chr>, season_type <chr>, week <int>, #> #   posteam <chr>, posteam_type <chr>, defteam <chr>, side_of_field <chr>, #> #   yardline_100 <dbl>, game_date <chr>, quarter_seconds_remaining <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Play By Play — load_pbp","title":"Load Play By Play — load_pbp","text":"Loads play play seasons nflverse-data repository","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Play By Play — load_pbp","text":"","code":"load_pbp(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Play By Play — load_pbp","text":"seasons numeric vector 4-digit years associated given NFL seasons - defaults latest season. set TRUE, returns available data since 1999. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Play By Play — load_pbp","text":"complete nflfastR dataset returned nflfastR::build_nflfastR_pbp() (see ) given seasons","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pbp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Play By Play — load_pbp","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_pbp(2019:2020) }) #> ── nflverse play by play data ────────────────────────────────────────────────── #> ℹ Data updated: 2022-09-27 11:27:07 UTC #> # A tibble: 96,548 × 372 #>    play_id game_id     old_game_id home_team away_team season_type  week posteam #>      <dbl> <chr>       <chr>       <chr>     <chr>     <chr>       <int> <chr>   #>  1       1 2019_01_AT… 2019090804  MIN       ATL       REG             1 NA      #>  2      36 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  3      51 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  4      79 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  5     100 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  6     121 2019_01_AT… 2019090804  MIN       ATL       REG             1 ATL     #>  7     148 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #>  8     185 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #>  9     214 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #> 10     239 2019_01_AT… 2019090804  MIN       ATL       REG             1 MIN     #> # ℹ 96,538 more rows #> # ℹ 364 more variables: posteam_type <chr>, defteam <chr>, side_of_field <chr>, #> #   yardline_100 <dbl>, game_date <chr>, quarter_seconds_remaining <dbl>, #> #   half_seconds_remaining <dbl>, game_seconds_remaining <dbl>, #> #   game_half <chr>, quarter_end <dbl>, drive <dbl>, sp <dbl>, qtr <dbl>, #> #   down <dbl>, goal_to_go <dbl>, time <chr>, yrdln <chr>, ydstogo <dbl>, #> #   ydsnet <dbl>, desc <chr>, play_type <chr>, yards_gained <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Advanced Stats from PFR — load_pfr_advstats","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"Loads player level season stats provided Pro Football Reference starting 2018 season, primarily augment existing nflverse data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"","code":"load_pfr_advstats(   seasons = most_recent_season(),   stat_type = c(\"pass\", \"rush\", \"rec\", \"def\"),   summary_level = c(\"week\", \"season\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"seasons numeric vector specifying seasons return, TRUE returns available data stat_type one \"pass\", \"rush\", \"rec\", \"def\" summary_level one \"week\" (default) \"season\" - data available season level file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"tibble player statistics provided Pro Football Reference supplements data nflverse","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_advstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Advanced Stats from PFR — load_pfr_advstats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_pfr_advstats() }) #> ── nflverse advanced pass weekly stats via PFR ───────────────────────────────── #> ℹ Data updated: 2023-08-01 19:03:55 UTC #> # A tibble: 685 × 24 #>    game_id     pfr_game_id season  week game_type team  opponent pfr_player_name #>    <chr>       <chr>        <int> <int> <chr>     <chr> <chr>    <chr>           #>  1 2022_01_BU… 202209080r…   2022     1 REG       LA    BUF      Matthew Staffo… #>  2 2022_01_BU… 202209080r…   2022     1 REG       BUF   LA       Josh Allen      #>  3 2022_01_NO… 202209110a…   2022     1 REG       ATL   NO       Marcus Mariota  #>  4 2022_01_NO… 202209110a…   2022     1 REG       NO    ATL      Jameis Winston  #>  5 2022_01_CL… 202209110c…   2022     1 REG       CAR   CLE      Baker Mayfield  #>  6 2022_01_CL… 202209110c…   2022     1 REG       CLE   CAR      Jacoby Brissett #>  7 2022_01_SF… 202209110c…   2022     1 REG       CHI   SF       Justin Fields   #>  8 2022_01_SF… 202209110c…   2022     1 REG       SF    CHI      Trey Lance      #>  9 2022_01_PI… 202209110c…   2022     1 REG       CIN   PIT      Joe Burrow      #> 10 2022_01_PI… 202209110c…   2022     1 REG       PIT   CIN      Mitchell Trubi… #> # ℹ 675 more rows #> # ℹ 16 more variables: pfr_player_id <chr>, passing_drops <dbl>, #> #   passing_drop_pct <dbl>, receiving_drop <dbl>, receiving_drop_pct <dbl>, #> #   passing_bad_throws <dbl>, passing_bad_throw_pct <dbl>, times_sacked <dbl>, #> #   times_blitzed <dbl>, times_hurried <dbl>, times_hit <dbl>, #> #   times_pressured <dbl>, times_pressured_pct <dbl>, def_times_blitzed <dbl>, #> #   def_times_hurried <dbl>, def_times_hitqb <dbl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Advanced Passing Stats from PFR — load_pfr_passing","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"Loads player level season stats provided Pro Football Reference starting 2019 season.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"","code":"load_pfr_passing(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"seasons numeric vector specifying seasons return, TRUE returns available data","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"tibble season-level player statistics provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_pfr_passing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Advanced Passing Stats from PFR — load_pfr_passing","text":"","code":"# \\donttest{   load_pfr_passing() #> Warning: `load_pfr_passing()` has been deprecated, please use #> `load_pfr_advstats(stat_type = 'pass', summary_level = 'season')` #> ── nflverse advanced passing season stats via PFR ────────────────────────────── #> ℹ Data updated: 2023-01-04 07:16:29 UTC #> # A tibble: 536 × 28 #>    player        team  pass_attempts throwaways spikes drops drop_pct bad_throws #>    <chr>         <chr>         <dbl>      <dbl>  <dbl> <dbl>    <dbl>      <dbl> #>  1 Ben Roethlis… PIT             675          7      3    24      3.6        122 #>  2 Patrick Maho… KC              580         24      1    28      5           95 #>  3 Matt Ryan     ATL             608         18      1    36      6.1         79 #>  4 Jared Goff    LAR             561         29      2    13      2.5         93 #>  5 Andrew Luck   IND             639          8      2    37      5.9         88 #>  6 Aaron Rodgers GB              597         48      2    27      4.9        106 #>  7 Tom Brady     NE              570         22      2    25      4.6        103 #>  8 Philip Rivers LAC             508         13      0    23      4.6         64 #>  9 Eli Manning   NYG             576          9      1    24      4.2         94 #> 10 Kirk Cousins  MIN             606         17      3    25      4.3         68 #> # ℹ 526 more rows #> # ℹ 20 more variables: bad_throw_pct <dbl>, season <int>, pfr_id <chr>, #> #   pocket_time <dbl>, times_blitzed <dbl>, times_hurried <dbl>, #> #   times_hit <dbl>, times_pressured <dbl>, pressure_pct <dbl>, #> #   batted_balls <dbl>, on_tgt_throws <dbl>, on_tgt_pct <dbl>, rpo_plays <dbl>, #> #   rpo_yards <dbl>, rpo_pass_att <dbl>, rpo_pass_yards <dbl>, #> #   rpo_rush_att <dbl>, rpo_rush_yards <dbl>, pa_pass_att <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Player Level Weekly Stats — load_player_stats","title":"Load Player Level Weekly Stats — load_player_stats","text":"Load Player Level Weekly Stats","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Player Level Weekly Stats — load_player_stats","text":"","code":"load_player_stats(   seasons = most_recent_season(),   stat_type = c(\"offense\", \"kicking\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Player Level Weekly Stats — load_player_stats","text":"seasons numeric vector seasons return, defaults recent season. set TRUE, returns available data. stat_type one offense kicking file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Player Level Weekly Stats — load_player_stats","text":"tibble week-level player statistics aims match NFL official box scores.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_player_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Player Level Weekly Stats — load_player_stats","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_player_stats()   load_player_stats(stat_type = \"kicking\") }) #> ── nflverse player stats: kicking ────────────────────────────────────────────── #> ℹ Data updated: 2023-02-28 09:28:01 UTC #> # A tibble: 565 × 40 #>    season  week season_type team  player_name player_id  fg_made fg_missed #>     <int> <int> <chr>       <chr> <chr>       <chr>        <int>     <int> #>  1   2022     1 REG         ARI   M.Prater    00-0023853       0         0 #>  2   2022     1 REG         ATL   Y.Koo       00-0033702       4         0 #>  3   2022     1 REG         BAL   J.Tucker    00-0029597       1         0 #>  4   2022     1 REG         BUF   T.Bass      00-0036162       1         0 #>  5   2022     1 REG         CAR   E.Pineiro   00-0034173       1         0 #>  6   2022     1 REG         CHI   C.Santos    00-0031203       0         0 #>  7   2022     1 REG         CIN   E.McPherson 00-0036854       2         1 #>  8   2022     1 REG         CLE   C.York      00-0038097       4         0 #>  9   2022     1 REG         DAL   B.Maher     00-0030332       1         0 #> 10   2022     1 REG         DEN   B.McManus   00-0029822       3         1 #> # ℹ 555 more rows #> # ℹ 32 more variables: fg_blocked <int>, fg_long <dbl>, fg_att <dbl>, #> #   fg_pct <dbl>, pat_made <int>, pat_missed <int>, pat_blocked <int>, #> #   pat_att <dbl>, pat_pct <dbl>, fg_made_distance <dbl>, #> #   fg_missed_distance <dbl>, fg_blocked_distance <dbl>, gwfg_att <int>, #> #   gwfg_distance <dbl>, gwfg_made <int>, gwfg_missed <int>, #> #   gwfg_blocked <int>, fg_made_0_19 <dbl>, fg_made_20_29 <dbl>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Players — load_players","title":"Load Players — load_players","text":"Load dataframe player-level information, including IDs mostly-immutable data (birthdates, college, draft position etc.)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Players — load_players","text":"","code":"load_players(file_type = getOption(\"nflreadr.prefer\", default = \"rds\"))"},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Players — load_players","text":"file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Players — load_players","text":"tibble one row per player.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_players.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Players — load_players","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_players() }) #> ── nflverse players ──────────────────────────────────────────────────────────── #> ℹ Data updated: 2023-04-01 01:28:00 UTC #> # A tibble: 19,274 × 32 #>    status display_name     first_name last_name esb_id gsis_id suffix birth_date #>    <chr>  <chr>            <chr>      <chr>     <chr>  <chr>   <chr>  <chr>      #>  1 RET    'Omar Ellison    'Omar      Ellison   ELL71… 00-000… NA     NA         #>  2 RES    A'Shawn Robinson A'Shawn    Robinson  ROB36… 00-003… NA     1995-03-21 #>  3 ACT    A.J. Arcuri      A.J.       Arcuri    ARC71… 00-003… NA     NA         #>  4 RES    A.J. Bouye       Arlandus   Bouye     BOU65… 00-003… NA     1991-08-16 #>  5 ACT    A.J. Brown       Arthur     Brown     BRO41… 00-003… NA     1997-06-30 #>  6 ACT    A.J. Cann        Aaron      Cann      CAN36… 00-003… NA     1991-10-03 #>  7 ACT    A.J. Cole        A.J.       Cole      COL21… 00-003… III    1995-11-27 #>  8 RET    A.J. Cruz        A.J.       Cruz      CRU77… 00-003… NA     NA         #>  9 RET    A.J. Dalton      A.J.       Dalton    DAL64… 00-003… NA     NA         #> 10 RET    A.J. Davis       A.J.       Davis     DAV11… 00-002… NA     NA         #> # ℹ 19,264 more rows #> # ℹ 24 more variables: college_name <chr>, position_group <chr>, #> #   position <chr>, jersey_number <int>, height <chr>, weight <chr>, #> #   team_abbr <chr>, team_seq <int>, current_team_id <chr>, #> #   football_name <chr>, entry_year <int>, rookie_year <int>, draft_club <chr>, #> #   college_conference <chr>, status_description_abbr <chr>, #> #   status_short_description <chr>, gsis_it_id <int>, short_name <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Rosters — load_rosters","title":"Load Rosters — load_rosters","text":"Load Rosters","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Rosters — load_rosters","text":"","code":"load_rosters(   seasons = most_recent_season(roster = TRUE),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Rosters — load_rosters","text":"seasons numeric vector seasons return, defaults returning year's data March later. set TRUE, return available data. Data available back 1920. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Rosters — load_rosters","text":"tibble season-level roster data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_rosters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Rosters — load_rosters","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_rosters(2020) }) #> ── nflverse roster data ──────────────────────────────────────────────────────── #> ℹ Data updated: 2023-03-22 04:03:04 UTC #> # A tibble: 2,683 × 36 #>    season team  position depth_chart_position jersey_number status     full_name #>     <int> <chr> <chr>    <chr>                        <int> <chr>      <chr>     #>  1   2020 ARI   DB       CB                              25 R/Injured  Johnatha… #>  2   2020 ARI   DB       CB                              21 Active     Patrick … #>  3   2020 ARI   DB       CB                              20 PS; Vet    Prince A… #>  4   2020 ARI   DB       CB                              20 Active     Dre Kirk… #>  5   2020 ARI   DB       FS                              31 R/COVID-19 Chris Ba… #>  6   2020 ARI   DB       CB                              23 R/Injured  Robert A… #>  7   2020 ARI   DB       FS                              28 Active     Charles … #>  8   2020 ARI   DB       CB                              27 Active     Kevin Pe… #>  9   2020 ARI   DB       SS                              32 Active     Budda Ba… #> 10   2020 ARI   DB       CB                              33 Active     Byron Mu… #> # ℹ 2,673 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <date>, #> #   height <int>, weight <int>, college <chr>, gsis_id <chr>, espn_id <chr>, #> #   sportradar_id <chr>, yahoo_id <chr>, rotowire_id <chr>, pff_id <chr>, #> #   pfr_id <chr>, fantasy_data_id <chr>, sleeper_id <chr>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Weekly Rosters — load_rosters_weekly","title":"Load Weekly Rosters — load_rosters_weekly","text":"Returns week level rosters (rather latest given season returned load_rosters())","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Weekly Rosters — load_rosters_weekly","text":"","code":"load_rosters_weekly(   seasons = most_recent_season(roster = TRUE),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Weekly Rosters — load_rosters_weekly","text":"seasons numeric vector seasons return, defaults returning year's data March later. set TRUE, return available data. Data available back 2002. file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Weekly Rosters — load_rosters_weekly","text":"tibble weekly roster data.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_rosters_weekly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Weekly Rosters — load_rosters_weekly","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_rosters_weekly(2020) }) #> ── nflverse weekly roster data ───────────────────────────────────────────────── #> ℹ Data updated: 2023-03-22 04:02:39 UTC #> # A tibble: 44,130 × 36 #>    season team  position depth_chart_position jersey_number status full_name     #>     <int> <chr> <chr>    <chr>                        <int> <chr>  <chr>         #>  1   2020 ARI   DB       CB                              21 Active Patrick Pete… #>  2   2020 ARI   DB       CB                              20 Active Dre Kirkpatr… #>  3   2020 ARI   DB       SS                              31 Active Chris Banjo   #>  4   2020 ARI   DB       CB                              23 NA     Robert Alford #>  5   2020 ARI   DB       FS                              28 Active Charles Wash… #>  6   2020 ARI   DB       SS                              44 Active Kentrell Bri… #>  7   2020 ARI   DB       CB                              34 NA     Duke Thomas   #>  8   2020 ARI   DB       CB                              27 Active Kevin Peters… #>  9   2020 ARI   DB       CB                              32 Active Ken Crawley   #> 10   2020 ARI   DB       FS                              32 Active Budda Baker   #> # ℹ 44,120 more rows #> # ℹ 29 more variables: first_name <chr>, last_name <chr>, birth_date <date>, #> #   height <int>, weight <int>, college <chr>, gsis_id <chr>, espn_id <chr>, #> #   sportradar_id <chr>, yahoo_id <chr>, rotowire_id <chr>, pff_id <chr>, #> #   pfr_id <chr>, fantasy_data_id <chr>, sleeper_id <chr>, years_exp <int>, #> #   headshot_url <chr>, ngs_position <chr>, week <int>, game_type <chr>, #> #   status_description_abbr <chr>, football_name <chr>, esb_id <chr>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Game/Schedule Data — load_schedules","title":"Load Game/Schedule Data — load_schedules","text":"returns game/schedule information maintained Lee Sharpe.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Game/Schedule Data — load_schedules","text":"","code":"load_schedules(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Game/Schedule Data — load_schedules","text":"seasons numeric vector seasons return, default TRUE returns available data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Game/Schedule Data — load_schedules","text":"tibble game information past /future games.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_schedules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Game/Schedule Data — load_schedules","text":"","code":"# \\donttest{ try({ # prevents cran errors  load_schedules(2020) }) #> ── nflverse games and schedules ──────────────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:42 UTC #> # A tibble: 269 × 45 #>    game_id  season game_type  week gameday weekday gametime away_team away_score #>    <chr>     <int> <chr>     <int> <chr>   <chr>   <chr>    <chr>          <int> #>  1 2020_01…   2020 REG           1 2020-0… Thursd… 20:20    HOU               20 #>  2 2020_01…   2020 REG           1 2020-0… Sunday  13:00    SEA               38 #>  3 2020_01…   2020 REG           1 2020-0… Sunday  13:00    CLE                6 #>  4 2020_01…   2020 REG           1 2020-0… Sunday  13:00    NYJ               17 #>  5 2020_01…   2020 REG           1 2020-0… Sunday  13:00    LV                34 #>  6 2020_01…   2020 REG           1 2020-0… Sunday  13:00    CHI               27 #>  7 2020_01…   2020 REG           1 2020-0… Sunday  13:00    IND               20 #>  8 2020_01…   2020 REG           1 2020-0… Sunday  13:00    GB                43 #>  9 2020_01…   2020 REG           1 2020-0… Sunday  13:00    MIA               11 #> 10 2020_01…   2020 REG           1 2020-0… Sunday  13:00    PHI               17 #> # ℹ 259 more rows #> # ℹ 36 more variables: home_team <chr>, home_score <int>, location <chr>, #> #   result <int>, total <int>, overtime <int>, old_game_id <chr>, gsis <int>, #> #   nfl_detail_id <chr>, pfr <chr>, pff <int>, espn <chr>, away_rest <int>, #> #   home_rest <int>, away_moneyline <int>, home_moneyline <int>, #> #   spread_line <dbl>, away_spread_odds <int>, home_spread_odds <int>, #> #   total_line <dbl>, under_odds <int>, over_odds <int>, div_game <int>, … # }"},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Snap Counts from PFR — load_snap_counts","title":"Load Snap Counts from PFR — load_snap_counts","text":"Loads game level snap counts stats provided Pro Football Reference starting 2012 season.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Snap Counts from PFR — load_snap_counts","text":"","code":"load_snap_counts(   seasons = most_recent_season(),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\") )"},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Snap Counts from PFR — load_snap_counts","text":"seasons numeric vector specifying seasons return, TRUE returns available data file_type One c(\"rds\", \"qs\", \"csv\", \"parquet\"). Can also set globally options(nflreadr.prefer)","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Snap Counts from PFR — load_snap_counts","text":"tibble game-level snap counts provided Pro Football Reference.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_snap_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Snap Counts from PFR — load_snap_counts","text":"","code":"# \\donttest{   try({ # prevents CRAN errors   load_snap_counts()   }) #> ── nflverse snap counts ──────────────────────────────────────────────────────── #> ℹ Data updated: 2023-02-13 18:28:12 UTC #> # A tibble: 26,340 × 16 #>    game_id      pfr_game_id season game_type  week player pfr_player_id position #>    <chr>        <chr>        <int> <chr>     <int> <chr>  <chr>         <chr>    #>  1 2022_01_BAL… 202209110n…   2022 REG           1 Max M… MitcMa02      T        #>  2 2022_01_BAL… 202209110n…   2022 REG           1 Laken… TomlLa01      G        #>  3 2022_01_BAL… 202209110n…   2022 REG           1 Alija… VeraAl00      G        #>  4 2022_01_BAL… 202209110n…   2022 REG           1 Georg… FantGe00      T        #>  5 2022_01_BAL… 202209110n…   2022 REG           1 Conno… McGoCo00      C        #>  6 2022_01_BAL… 202209110n…   2022 REG           1 Joe F… FlacJo00      QB       #>  7 2022_01_BAL… 202209110n…   2022 REG           1 Tyler… ConkTy00      TE       #>  8 2022_01_BAL… 202209110n…   2022 REG           1 Elija… MoorEl00      WR       #>  9 2022_01_BAL… 202209110n…   2022 REG           1 Corey… DaviCo03      WR       #> 10 2022_01_BAL… 202209110n…   2022 REG           1 Micha… CartMi03      RB       #> # ℹ 26,330 more rows #> # ℹ 8 more variables: team <chr>, opponent <chr>, offense_snaps <dbl>, #> #   offense_pct <dbl>, defense_snaps <dbl>, defense_pct <dbl>, st_snaps <dbl>, #> #   st_pct <dbl> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Load NFL Team Graphics, Colors, and Logos — load_teams","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"Loads team graphics, colors, logos - useful plots!","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"","code":"load_teams(current = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"current TRUE (default), returns standardized list current teams , abbreviations per team_abbr_mapping.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"tibble team-level image URLs hex color codes.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_teams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load NFL Team Graphics, Colors, and Logos — load_teams","text":"","code":"# \\donttest{ try({ # prevents cran errors   load_teams() }) #> ── nflverse team graphics ────────────────────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:44 UTC #> # A tibble: 32 × 16 #>    team_abbr team_name      team_id team_nick team_conf team_division team_color #>    <chr>     <chr>          <chr>   <chr>     <chr>     <chr>         <chr>      #>  1 ARI       Arizona Cardi… 3800    Cardinals NFC       NFC West      #97233F    #>  2 ATL       Atlanta Falco… 0200    Falcons   NFC       NFC South     #A71930    #>  3 BAL       Baltimore Rav… 0325    Ravens    AFC       AFC North     #241773    #>  4 BUF       Buffalo Bills  0610    Bills     AFC       AFC East      #00338D    #>  5 CAR       Carolina Pant… 0750    Panthers  NFC       NFC South     #0085CA    #>  6 CHI       Chicago Bears  0810    Bears     NFC       NFC North     #0B162A    #>  7 CIN       Cincinnati Be… 0920    Bengals   AFC       AFC North     #FB4F14    #>  8 CLE       Cleveland Bro… 1050    Browns    AFC       AFC North     #FF3C00    #>  9 DAL       Dallas Cowboys 1200    Cowboys   NFC       NFC East      #002244    #> 10 DEN       Denver Broncos 1400    Broncos   AFC       AFC West      #002244    #> # ℹ 22 more rows #> # ℹ 9 more variables: team_color2 <chr>, team_color3 <chr>, team_color4 <chr>, #> #   team_logo_wikipedia <chr>, team_logo_espn <chr>, team_wordmark <chr>, #> #   team_conference_logo <chr>, team_league_logo <chr>, team_logo_squared <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Trades — load_trades","title":"Load Trades — load_trades","text":"returns table historical trades maintained Lee Sharpe.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Trades — load_trades","text":"","code":"load_trades(seasons = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Trades — load_trades","text":"seasons numeric vector seasons return, default TRUE returns available data.","code":""},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Trades — load_trades","text":"tibble game information past /future games.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/load_trades.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Trades — load_trades","text":"","code":"# \\donttest{  load_trades(2020) #> ── nflverse trades (via PFR / Lee Sharpe) ────────────────────────────────────── #> ℹ Data updated: 2023-08-07 13:18:45 UTC #> # A tibble: 211 × 11 #>    trade_id season trade_date gave  received pick_season pick_round pick_number #>       <dbl>  <dbl> <date>     <chr> <chr>          <dbl>      <dbl>       <dbl> #>  1     1465   2020 2020-03-03 DEN   JAX             2020          4         137 #>  2     1465   2020 2020-03-03 JAX   DEN               NA         NA          NA #>  3     1466   2020 2020-03-04 CAR   LAC               NA         NA          NA #>  4     1466   2020 2020-03-04 LAC   CAR               NA         NA          NA #>  5     1471   2020 2020-03-15 BAL   JAX             2020          5         157 #>  6     1471   2020 2020-03-15 JAX   BAL               NA         NA          NA #>  7     1467   2020 2020-03-16 IND   SF              2020          1          13 #>  8     1467   2020 2020-03-16 SF    IND               NA         NA          NA #>  9     1468   2020 2020-03-16 BUF   MIN             2020          1          22 #> 10     1468   2020 2020-03-16 BUF   MIN             2020          5         155 #> # ℹ 201 more rows #> # ℹ 3 more variables: conditional <dbl>, pfr_id <chr>, pfr_name <chr> # }"},{"path":"https://nflreadr.nflverse.com/reference/nflreadr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"nflreadr: Download 'nflverse' Data — nflreadr-package","title":"nflreadr: Download 'nflverse' Data — nflreadr-package","text":"minimal package downloading data 'GitHub' repositories 'nflverse' project.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/nflreadr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"nflreadr: Download 'nflverse' Data — nflreadr-package","text":"Maintainer: Tan Ho tan@tanho.ca (ORCID) [copyright holder] Authors: Sebastian Carl mrcaseb@gmail.com contributors: John Edwards edwards1860@gmail.com [contributor] Ben Baldwin bbaldwin206@gmail.com [contributor] Thomas Mock [contributor] Lee Sharpe [contributor] Pranav Rajaram pranavrajaram@gmail.com [contributor]","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"nflverse data class — nflverse_data-class","title":"nflverse data class — nflverse_data-class","text":"class special S3 print method tries read attached metadata provide timestamps source attributes. otherwise dispatch data.frame class.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk download utilities via piggyback — nflverse_download","title":"Bulk download utilities via piggyback — nflverse_download","text":"function downloads updates data nflverse-data repository releases, creating subfolders match release structure.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk download utilities via piggyback — nflverse_download","text":"","code":"nflverse_download(   ...,   folder_path = getOption(\"nflreadr.download_path\", default = \".\"),   file_type = getOption(\"nflreadr.prefer\", default = \"rds\"),   use_hive = file_type %in% c(\"parquet\", \"csv\"),   .token = \"default\" )"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk download utilities via piggyback — nflverse_download","text":"... releases download, provided either unquoted character format (.e. pbp \"pbp\" fine). Available release names can listed nflverse_releases() folder_path folder subfolders created release - defaults path specified options(nflreadr.download_path) \".\" (current working directory) file_type one c(\"rds\",\"parquet\", \"csv\", \"qs\") - defaults file type specified options(nflreadr.prefer) \"rds\" use_hive whether create hive-style partition folders season, e.g. \"~/pbp/.season=2021/pbp.csv\" .token GitHub API token, \"default\" uses gh::gh_token()","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk download utilities via piggyback — nflverse_download","text":"","code":"{ # \\donttest{ try({   ## could also set options like   # options(nflreadr.download_path = tempdir(), nflreadr.prefer = \"parquet\")    nflverse_download(combine, contracts, folder_path = tempdir(), file_type = \"parquet\")    list.files(tempdir(),pattern = \".parquet$\") # check that files were downloaded! }) # } } #> Error in value[[3L]](cond) :  #>   ! Cannot access release data for repo \"nflverse/nflverse-data\". #> Check that you have provided a `.token` and that the repo is correctly #> specified. #> GitHub API error (403): API rate limit exceeded for installation ID 16217660."},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute nflverse Game Identifiers — nflverse_game_id","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"Compute nflverse Game Identifiers","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"","code":"nflverse_game_id(season, week, away, home)"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"season 4 digit season 1999 output most_recent_season() week Numeric character giving week, 1 22. home, away Valid NFL team abbreviation can found team_abbr_mapping","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"character vector","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_game_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute nflverse Game Identifiers — nflverse_game_id","text":"","code":"nflverse_game_id(2022, 2, \"LAC\", \"KC\") #> [1] \"2022_02_LAC_KC\""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available nflverse releases — nflverse_releases","title":"List all available nflverse releases — nflverse_releases","text":"functions lists nflverse data releases available nflverse-data repo. Release names can used downloads nflverse_download().","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available nflverse releases — nflverse_releases","text":"","code":"nflverse_releases(.token = \"default\")"},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all available nflverse releases — nflverse_releases","text":".token GitHub API token, \"default\" uses gh::gh_token()","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available nflverse releases — nflverse_releases","text":"dataframe containing release names, release descriptions, relevant release information.","code":""},{"path":"https://nflreadr.nflverse.com/reference/nflverse_releases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all available nflverse releases — nflverse_releases","text":"","code":"# \\donttest{ # Change option for better output old <- options(piggyback.verbose = FALSE)  try( # avoids cran failures, can skip in normal usage nflverse_releases() ) #> Error in value[[3L]](cond) :  #>   ! Cannot access release data for repo \"nflverse/nflverse-data\". #> Check that you have provided a `.token` and that the repo is correctly #> specified. #> GitHub API error (403): API rate limit exceeded for installation ID 16217660.  # Restore old options options(old) # }"},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .parquet file from a remote connection — parquet_from_url","title":"Load .parquet file from a remote connection — parquet_from_url","text":"Retrieves parquet file URL. function cached","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .parquet file from a remote connection — parquet_from_url","text":"","code":"parquet_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .parquet file from a remote connection — parquet_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .parquet file from a remote connection — parquet_from_url","text":"dataframe parsed arrow::read_parquet()","code":""},{"path":"https://nflreadr.nflverse.com/reference/parquet_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .parquet file from a remote connection — parquet_from_url","text":"","code":"# \\donttest{ try({   parquet_from_url(     \"https://github.com/nflverse/nflverse-data/releases/download/player_stats/player_stats.parquet\"   ) }) #>          player_id player_name   player_display_name position position_group #>      1: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      2: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      3: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      4: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      5: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>     ---                                                                      #> 124080: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124081: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124082: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124083: 00-0038147   D.Baldwin        Daylen Baldwin       WR             WR #> 124084: 00-0038149       J.Ali              Josh Ali       WR             WR #>                                                                               headshot_url #>      1:                                                                               <NA> #>      2:                                                                               <NA> #>      3:                                                                               <NA> #>      4:                                                                               <NA> #>      5:                                                                               <NA> #>     ---                                                                                    #> 124080: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124081: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124082: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124083:                                                                               <NA> #> 124084:                                                                               <NA> #>         recent_team season week season_type completions attempts passing_yards #>      1:         MIA   1999    1         REG           0        0             0 #>      2:         MIA   1999    2         REG           0        0             0 #>      3:         MIA   1999    4         REG           0        0             0 #>      4:         CLE   1999    7         REG           0        0             0 #>      5:         CLE   1999    8         REG           0        0             0 #>     ---                                                                        #> 124080:         SEA   2022   17         REG           0        0             0 #> 124081:         SEA   2022   18         REG           0        0             0 #> 124082:         SEA   2022   19        POST           0        0             0 #> 124083:         CLE   2022   15         REG           0        0             0 #> 124084:         ATL   2022   18         REG           0        0             0 #>         passing_tds interceptions sacks sack_yards sack_fumbles #>      1:           0             0     0          0            0 #>      2:           0             0     0          0            0 #>      3:           0             0     0          0            0 #>      4:           0             0     0          0            0 #>      5:           0             0     0          0            0 #>     ---                                                         #> 124080:           0             0     0          0            0 #> 124081:           0             0     0          0            0 #> 124082:           0             0     0          0            0 #> 124083:           0             0     0          0            0 #> 124084:           0             0     0          0            0 #>         sack_fumbles_lost passing_air_yards passing_yards_after_catch #>      1:                 0                 0                         0 #>      2:                 0                 0                         0 #>      3:                 0                 0                         0 #>      4:                 0                 0                         0 #>      5:                 0                 0                         0 #>     ---                                                               #> 124080:                 0                 0                         0 #> 124081:                 0                 0                         0 #> 124082:                 0                 0                         0 #> 124083:                 0                 0                         0 #> 124084:                 0                 0                         0 #>         passing_first_downs passing_epa passing_2pt_conversions pacr dakota #>      1:                   0          NA                       0   NA     NA #>      2:                   0          NA                       0   NA     NA #>      3:                   0          NA                       0   NA     NA #>      4:                   0          NA                       0   NA     NA #>      5:                   0          NA                       0   NA     NA #>     ---                                                                     #> 124080:                   0          NA                       0   NA     NA #> 124081:                   0          NA                       0   NA     NA #> 124082:                   0          NA                       0   NA     NA #> 124083:                   0          NA                       0   NA     NA #> 124084:                   0          NA                       0   NA     NA #>         carries rushing_yards rushing_tds rushing_fumbles rushing_fumbles_lost #>      1:      16            60           1               0                    0 #>      2:       9            33           0               0                    0 #>      3:       3             2           0               0                    0 #>      4:       6            27           0               0                    0 #>      5:      13            39           0               0                    0 #>     ---                                                                        #> 124080:      23           133           0               0                    0 #> 124081:      29           114           0               0                    0 #> 124082:      15            63           1               0                    0 #> 124083:       0             0           0               0                    0 #> 124084:       0             0           0               0                    0 #>         rushing_first_downs rushing_epa rushing_2pt_conversions receptions #>      1:                   4   6.2487711                       0          1 #>      2:                   1  -1.4349502                       0          3 #>      3:                   0  -1.5399517                       0          0 #>      4:                   0   0.2160509                       0          2 #>      5:                   2  -2.9722589                       0          0 #>     ---                                                                    #> 124080:                   4  -0.4249183                       0          1 #> 124081:                   7  -5.1096824                       0          1 #> 124082:                   4   1.7530220                       0          1 #> 124083:                   0          NA                       0          2 #> 124084:                   0          NA                       0          0 #>         targets receiving_yards receiving_tds receiving_fumbles #>      1:       1               7             0                 0 #>      2:       4              18             0                 0 #>      3:       1               0             0                 0 #>      4:       2               8             0                 0 #>      5:       0               0             0                 0 #>     ---                                                         #> 124080:       1               9             0                 0 #> 124081:       1              10             0                 0 #> 124082:       1               3             0                 0 #> 124083:       2              25             0                 0 #> 124084:       1               0             0                 0 #>         receiving_fumbles_lost receiving_air_yards receiving_yards_after_catch #>      1:                      0                   0                           0 #>      2:                      0                   0                           0 #>      3:                      0                   0                           0 #>      4:                      0                   0                           0 #>      5:                      0                   0                           0 #>     ---                                                                        #> 124080:                      0                  -1                          10 #> 124081:                      0                  -1                          11 #> 124082:                      0                   0                           3 #> 124083:                      0                  25                           0 #> 124084:                      0                  45                           0 #>         receiving_first_downs receiving_epa receiving_2pt_conversions racr #>      1:                     0     0.2923782                         0    0 #>      2:                     1     0.3770089                         0    0 #>      3:                     0    -0.6995777                         0    0 #>      4:                     0    -0.2284540                         0    0 #>      5:                     0            NA                         0   NA #>     ---                                                                    #> 124080:                     1     0.9681060                         0   -9 #> 124081:                     0     0.4302520                         0  -10 #> 124082:                     0    -0.3099295                         0    0 #> 124083:                     2     1.7913616                         0    1 #> 124084:                     0    -0.5190199                         0    0 #>         target_share air_yards_share       wopr special_teams_tds #>      1:   0.05263158     0.000000000 0.00000000                 0 #>      2:   0.11764706     0.000000000 0.00000000                 0 #>      3:   0.02380952     0.000000000 0.00000000                 0 #>      4:   0.05000000     0.000000000 0.00000000                 0 #>      5:           NA              NA         NA                 0 #>     ---                                                           #> 124080:   0.03571429    -0.003717472 0.05096920                 0 #> 124081:   0.03571429    -0.003745318 0.05094971                 0 #> 124082:   0.02941176     0.000000000 0.04411765                 0 #> 124083:   0.07692308     0.223214286 0.27163462                 0 #> 124084:   0.03571429     0.137614679 0.14990170                 0 #>         fantasy_points fantasy_points_ppr #>      1:           12.7               13.7 #>      2:            5.1                8.1 #>      3:            0.2                0.2 #>      4:            3.5                5.5 #>      5:            3.9                3.9 #>     ---                                   #> 124080:           14.2               15.2 #> 124081:           12.4               13.4 #> 124082:           12.6               13.6 #> 124083:            2.5                4.5 #> 124084:            0.0                0.0 # }"},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate player name mappings — player_name_mapping","title":"Alternate player name mappings — player_name_mapping","text":"named character vector mapping common alternate names, re-exported ffscrapr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate player name mappings — player_name_mapping","text":"","code":"player_name_mapping"},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate player name mappings — player_name_mapping","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate player name mappings — player_name_mapping","text":"can suggest additions table opening issue ffscrapr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/player_name_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate player name mappings — player_name_mapping","text":"","code":"# \\donttest{ player_name_mapping[c(\"Chatarius Atwell\", \"Robert Kelley\")] #> Chatarius Atwell    Robert Kelley  #>    \"Tutu Atwell\"     \"Rob Kelley\"  # }"},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":null,"dir":"Reference","previous_headings":"","what":"Progressively — progressively","title":"Progressively — progressively","text":"function helps add progress-reporting function - given function f() progressor p(), return new function calls f() (exiting) call p() every iteration. inspired purrr's safely, quietly, possibly function decorators.","code":""},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progressively — progressively","text":"","code":"progressively(f, p = NULL)"},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progressively — progressively","text":"f function add progressor functionality . p function one created progressr::progressor() - also accepts purrr-style lambda functions.","code":""},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Progressively — progressively","text":"function f calls p() iteration.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/progressively.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progressively — progressively","text":"","code":"# \\donttest{ try({ # prevents cran errors  urls <- rep(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.csv\",3)  lapply(urls, progressively(read.csv, ~cli::cli_progress_step('Loading...')))  read_rosters <- function(urls){   p <- progressr::progressor(along = urls)   lapply(urls, progressively(read.csv, p)) }  progressr::with_progress(read_rosters())  }) #> ℹ Loading... #> ✔ Loading... [14ms] #>  #> ℹ Loading... #> ✔ Loading... [10ms] #>  #> ℹ Loading... #> ✔ Loading... [9ms] #>  #> Error in read_rosters() : argument \"urls\" is missing, with no default # }"},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .qs file from a remote connection — qs_from_url","title":"Load .qs file from a remote connection — qs_from_url","text":"Load .qs file remote connection","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .qs file from a remote connection — qs_from_url","text":"","code":"qs_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .qs file from a remote connection — qs_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .qs file from a remote connection — qs_from_url","text":"dataframe parsed qs::qdeserialize()","code":""},{"path":"https://nflreadr.nflverse.com/reference/qs_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .qs file from a remote connection — qs_from_url","text":"","code":"# \\donttest{ try({   qs_from_url(     \"https://github.com/nflverse/nflverse-data/releases/download/player_stats/player_stats.qs\"   ) }) #>          player_id player_name   player_display_name position position_group #>      1: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      2: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      3: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      4: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>      5: 00-0000003        <NA> Abdul-Karim al-Jabbar       RB             RB #>     ---                                                                      #> 124080: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124081: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124082: 00-0038134    K.Walker        Kenneth Walker       RB             RB #> 124083: 00-0038147   D.Baldwin        Daylen Baldwin       WR             WR #> 124084: 00-0038149       J.Ali              Josh Ali       WR             WR #>                                                                               headshot_url #>      1:                                                                               <NA> #>      2:                                                                               <NA> #>      3:                                                                               <NA> #>      4:                                                                               <NA> #>      5:                                                                               <NA> #>     ---                                                                                    #> 124080: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124081: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124082: https://static.www.nfl.com/image/private/f_auto,q_auto/league/rwdj1bljth8fyojof5dp #> 124083:                                                                               <NA> #> 124084:                                                                               <NA> #>         recent_team season week season_type completions attempts passing_yards #>      1:         MIA   1999    1         REG           0        0             0 #>      2:         MIA   1999    2         REG           0        0             0 #>      3:         MIA   1999    4         REG           0        0             0 #>      4:         CLE   1999    7         REG           0        0             0 #>      5:         CLE   1999    8         REG           0        0             0 #>     ---                                                                        #> 124080:         SEA   2022   17         REG           0        0             0 #> 124081:         SEA   2022   18         REG           0        0             0 #> 124082:         SEA   2022   19        POST           0        0             0 #> 124083:         CLE   2022   15         REG           0        0             0 #> 124084:         ATL   2022   18         REG           0        0             0 #>         passing_tds interceptions sacks sack_yards sack_fumbles #>      1:           0             0     0          0            0 #>      2:           0             0     0          0            0 #>      3:           0             0     0          0            0 #>      4:           0             0     0          0            0 #>      5:           0             0     0          0            0 #>     ---                                                         #> 124080:           0             0     0          0            0 #> 124081:           0             0     0          0            0 #> 124082:           0             0     0          0            0 #> 124083:           0             0     0          0            0 #> 124084:           0             0     0          0            0 #>         sack_fumbles_lost passing_air_yards passing_yards_after_catch #>      1:                 0                 0                         0 #>      2:                 0                 0                         0 #>      3:                 0                 0                         0 #>      4:                 0                 0                         0 #>      5:                 0                 0                         0 #>     ---                                                               #> 124080:                 0                 0                         0 #> 124081:                 0                 0                         0 #> 124082:                 0                 0                         0 #> 124083:                 0                 0                         0 #> 124084:                 0                 0                         0 #>         passing_first_downs passing_epa passing_2pt_conversions pacr dakota #>      1:                   0          NA                       0   NA     NA #>      2:                   0          NA                       0   NA     NA #>      3:                   0          NA                       0   NA     NA #>      4:                   0          NA                       0   NA     NA #>      5:                   0          NA                       0   NA     NA #>     ---                                                                     #> 124080:                   0          NA                       0   NA     NA #> 124081:                   0          NA                       0   NA     NA #> 124082:                   0          NA                       0   NA     NA #> 124083:                   0          NA                       0   NA     NA #> 124084:                   0          NA                       0   NA     NA #>         carries rushing_yards rushing_tds rushing_fumbles rushing_fumbles_lost #>      1:      16            60           1               0                    0 #>      2:       9            33           0               0                    0 #>      3:       3             2           0               0                    0 #>      4:       6            27           0               0                    0 #>      5:      13            39           0               0                    0 #>     ---                                                                        #> 124080:      23           133           0               0                    0 #> 124081:      29           114           0               0                    0 #> 124082:      15            63           1               0                    0 #> 124083:       0             0           0               0                    0 #> 124084:       0             0           0               0                    0 #>         rushing_first_downs rushing_epa rushing_2pt_conversions receptions #>      1:                   4   6.2487711                       0          1 #>      2:                   1  -1.4349502                       0          3 #>      3:                   0  -1.5399517                       0          0 #>      4:                   0   0.2160509                       0          2 #>      5:                   2  -2.9722589                       0          0 #>     ---                                                                    #> 124080:                   4  -0.4249183                       0          1 #> 124081:                   7  -5.1096824                       0          1 #> 124082:                   4   1.7530220                       0          1 #> 124083:                   0          NA                       0          2 #> 124084:                   0          NA                       0          0 #>         targets receiving_yards receiving_tds receiving_fumbles #>      1:       1               7             0                 0 #>      2:       4              18             0                 0 #>      3:       1               0             0                 0 #>      4:       2               8             0                 0 #>      5:       0               0             0                 0 #>     ---                                                         #> 124080:       1               9             0                 0 #> 124081:       1              10             0                 0 #> 124082:       1               3             0                 0 #> 124083:       2              25             0                 0 #> 124084:       1               0             0                 0 #>         receiving_fumbles_lost receiving_air_yards receiving_yards_after_catch #>      1:                      0                   0                           0 #>      2:                      0                   0                           0 #>      3:                      0                   0                           0 #>      4:                      0                   0                           0 #>      5:                      0                   0                           0 #>     ---                                                                        #> 124080:                      0                  -1                          10 #> 124081:                      0                  -1                          11 #> 124082:                      0                   0                           3 #> 124083:                      0                  25                           0 #> 124084:                      0                  45                           0 #>         receiving_first_downs receiving_epa receiving_2pt_conversions racr #>      1:                     0     0.2923782                         0    0 #>      2:                     1     0.3770089                         0    0 #>      3:                     0    -0.6995777                         0    0 #>      4:                     0    -0.2284540                         0    0 #>      5:                     0            NA                         0   NA #>     ---                                                                    #> 124080:                     1     0.9681060                         0   -9 #> 124081:                     0     0.4302520                         0  -10 #> 124082:                     0    -0.3099295                         0    0 #> 124083:                     2     1.7913616                         0    1 #> 124084:                     0    -0.5190199                         0    0 #>         target_share air_yards_share       wopr special_teams_tds #>      1:   0.05263158     0.000000000 0.00000000                 0 #>      2:   0.11764706     0.000000000 0.00000000                 0 #>      3:   0.02380952     0.000000000 0.00000000                 0 #>      4:   0.05000000     0.000000000 0.00000000                 0 #>      5:           NA              NA         NA                 0 #>     ---                                                           #> 124080:   0.03571429    -0.003717472 0.05096920                 0 #> 124081:   0.03571429    -0.003745318 0.05094971                 0 #> 124082:   0.02941176     0.000000000 0.04411765                 0 #> 124083:   0.07692308     0.223214286 0.27163462                 0 #> 124084:   0.03571429     0.137614679 0.14990170                 0 #>         fantasy_points fantasy_points_ppr #>      1:           12.7               13.7 #>      2:            5.1                8.1 #>      3:            0.2                0.2 #>      4:            3.5                5.5 #>      5:            3.9                3.9 #>     ---                                   #> 124080:           14.2               15.2 #> 124081:           12.4               13.4 #> 124082:           12.6               13.6 #> 124083:            2.5                4.5 #> 124084:            0.0                0.0 # }"},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raw filedata from a remote connection — raw_from_url","title":"Load raw filedata from a remote connection — raw_from_url","text":"function allows retrieve data URL raw format, can passed appropriate file-reading function. Data memoised/cached 24 hours.","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raw filedata from a remote connection — raw_from_url","text":"","code":"raw_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load raw filedata from a remote connection — raw_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raw filedata from a remote connection — raw_from_url","text":"raw vector","code":""},{"path":"https://nflreadr.nflverse.com/reference/raw_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load raw filedata from a remote connection — raw_from_url","text":"","code":"# \\donttest{ try({ # prevents CRAN errors head(raw_from_url(   \"https://github.com/nflverse/nflverse-data/releases/download/test/combines.rds\"   ), 50) }) #>  [1] 1f 8b 08 00 00 00 00 00 00 06 ec fd 49 8f 24 49 96 26 08 6a a3 6b a6 b2 02 #> [26] a8 1c ad aa 1c a0 0e 85 82 a1 d1 98 2e 0c ba 1c ee 1e 1e 91 19 3d 3d 13 a6 # }"},{"path":"https://nflreadr.nflverse.com/reference/rbindlist_with_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","title":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","text":"rbindlist maintain attributes last file","code":""},{"path":"https://nflreadr.nflverse.com/reference/rbindlist_with_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbindlist but maintain attributes of last file — rbindlist_with_attrs","text":"","code":"rbindlist_with_attrs(dflist)"},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Load .rds file from a remote connection — rds_from_url","title":"Load .rds file from a remote connection — rds_from_url","text":"Load .rds file remote connection","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load .rds file from a remote connection — rds_from_url","text":"","code":"rds_from_url(url)"},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load .rds file from a remote connection — rds_from_url","text":"url character url","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load .rds file from a remote connection — rds_from_url","text":"dataframe created readRDS()","code":""},{"path":"https://nflreadr.nflverse.com/reference/rds_from_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load .rds file from a remote connection — rds_from_url","text":"","code":"# \\donttest{ try({ # prevents cran errors   rds_from_url(\"https://github.com/nflverse/nflverse-data/releases/download/test/combines.rds\") }) #>       season draft_year           draft_team draft_round draft_ovr   pfr_id #>    1:   2000       2000        New York Jets           1        13 AbraJo00 #>    2:   2000       2000     Seattle Seahawks           1        19 AlexSh00 #>    3:   2000       2000   Kansas City Chiefs           6       188 AlfoDa20 #>    4:   2000         NA                 <NA>          NA        NA     <NA> #>    5:   2000       2000    Carolina Panthers           1        23 AndeRa21 #>   ---                                                                       #> 7676:   2022       2022    Green Bay Packers           1        28 WyatDe00 #> 7677:   2022         NA                 <NA>          NA        NA WydeJa00 #> 7678:   2022       2022     Cleveland Browns           4       124 YorkCa00 #> 7679:   2022         NA                 <NA>          NA        NA     <NA> #> 7680:   2022       2022 New England Patriots           4       137 ZappBa00 #>                  cfb_id      player_name pos           school  ht  wt forty #>    1:              <NA>     John Abraham OLB   South Carolina 6-4 252  4.55 #>    2: shaun-alexander-1  Shaun Alexander  RB          Alabama 6-0 218  4.58 #>    3:              <NA>   Darnell Alford  OT      Boston Col. 6-4 334  5.56 #>    4:              <NA>     Kyle Allamon  TE       Texas Tech 6-2 253  4.97 #>    5:              <NA> Rashard Anderson  CB    Jackson State 6-2 206  4.55 #>   ---                                                                       #> 7676:   devonte-wyatt-1    Devonte Wyatt  DT          Georgia 6-3 304  4.77 #> 7677: jalen-wydermyer-1  Jalen Wydermyer  TE        Texas A&M 6-4 255    NA #> 7678:       cade-york-1        Cade York   K              LSU 6-1 206    NA #> 7679:              <NA>      Nick Zakelj  OT          Fordham 6-6 316  5.13 #> 7680:    bailey-zappe-1     Bailey Zappe  QB Western Kentucky 6-1 215  4.88 #>       bench vertical broad_jump cone shuttle #>    1:    NA       NA         NA   NA      NA #>    2:    NA       NA         NA   NA      NA #>    3:    23     25.0         94 8.48    4.98 #>    4:    NA     29.0        104 7.29    4.49 #>    5:    NA     34.0        123 7.18    4.15 #>   ---                                        #> 7676:    NA     29.0        111   NA      NA #> 7677:    NA       NA         NA   NA      NA #> 7678:    12       NA         NA   NA      NA #> 7679:    27     28.5        110 7.75    4.71 #> 7680:    NA     30.0        109 7.19    4.40 # }"},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"function gives quick overview versions R operating system well versions nflverse/ffverse packages, options, dependencies. primarily designed help get quick idea going helping someone else debug problem.","code":""},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"","code":"nflverse_sitrep(   pkg = c(\"nflreadr\", \"nflfastR\", \"nflseedR\", \"nfl4th\", \"nflplotR\", \"nflverse\"),   recursive = TRUE,   redact_path = TRUE )  ffverse_sitrep(   pkg = c(\"ffscrapr\", \"ffsimulator\", \"ffpros\", \"ffopportunity\"),   recursive = TRUE,   redact_path = TRUE )  .sitrep(pkg, recursive = TRUE, header = \"\", redact_path = TRUE)"},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"pkg character vector naming installed packages, NULL (default) meaning nflverse packages. function checks internally packages installed informs case. recursive logical indicating whether dependencies pkg dependencies () included. Can also character vector listing types dependencies, subset c(\"Depends\", \"Imports\", \"LinkingTo\", \"Suggests\", \"Enhances\"). Character string \"\" shorthand vector, character string \"\" vector without \"Enhances\", character string \"strong\" (default) first three elements vector. redact_path logical indicating whether options contain \"path\" name redacted, default = TRUE header string printed horizontal separation lines used differentiate nflverse ffverse output.","code":""},{"path":"https://nflreadr.nflverse.com/reference/sitrep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Situation Report on System, nflverse/ffverse Package Versions and Dependencies — nflverse_sitrep","text":"","code":"# \\donttest{ try({ nflverse_sitrep() ffverse_sitrep() .sitrep(\"cachem\") }) #> ℹ You've asked for the packages nflfastR, nflseedR, nfl4th, nflplotR, and nflverse which are not installed.  #> They are skipped. #> ── System Info ───────────────────────────────────────────────────────────────── #> • R version 4.3.1 (2023-06-16)   • Running under: Ubuntu 22.04.2 LTS #> ── nflverse Packages ─────────────────────────────────────────────────────────── #> • nflreadr (1.3.2.06) #> ── nflverse Options ──────────────────────────────────────────────────────────── #> No options set for nflreadr #> ── nflverse Dependencies ─────────────────────────────────────────────────────── #> • cachem (1.0.8)  • data.table (1.14.8)  • memoise  (2.0.1)   #> • cli    (3.6.1)  • fastmap    (1.1.1)   • rappdirs (0.3.3)   #> • curl   (5.0.1)  • glue       (1.6.2)   • rlang    (1.1.1)   #> ──────────────────────────────────────────────────────────────────────────────── #> ℹ You've asked for the packages ffscrapr, ffsimulator, ffpros, and ffopportunity which are not installed.  #> They are skipped. #> ── System Info ───────────────────────────────────────────────────────────────── #> • R version 4.3.1 (2023-06-16)   • Running under: Ubuntu 22.04.2 LTS #> ── Packages ──────────────────────────────────────────────────────────────────── #> • cachem (1.0.8) #> ── Options ───────────────────────────────────────────────────────────────────── #> No options set for cachem #> ── Dependencies ──────────────────────────────────────────────────────────────── #> • fastmap (1.1.1) #> • rlang   (1.1.1) #> ──────────────────────────────────────────────────────────────────────────────── # }"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate team abbreviation mappings — team_abbr_mapping","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"named character vector mapping common alternate team abbreviations.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"","code":"team_abbr_mapping"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"can suggest additions table opening issue nflreadr.","code":""},{"path":[]},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate team abbreviation mappings — team_abbr_mapping","text":"","code":"# \\donttest{ team_abbr_mapping[c(\"STL\", \"OAK\",\"CRD\",\"BLT\", \"CLV\")] #>   STL   OAK   CRD   BLT   CLV  #>  \"LA\"  \"LV\" \"ARI\" \"BAL\" \"CLE\"  # }"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"named character vector mapping common alternate team abbreviations, follow relocations current city.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"","code":"team_abbr_mapping_norelocate"},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"named character vector name attribute \"alternate\" name. value attribute \"correct\" name.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"can suggest additions table opening issue nflreadr.","code":""},{"path":"https://nflreadr.nflverse.com/reference/team_abbr_mapping_norelocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternate team abbreviation mappings, no relocation — team_abbr_mapping_norelocate","text":"","code":"# \\donttest{ team_abbr_mapping_norelocate[c(\"STL\", \"OAK\",\"CRD\",\"BLT\", \"CLV\")] #>   STL   OAK   CRD   BLT   CLV  #> \"STL\" \"OAK\" \"ARI\" \"BAL\" \"CLE\"  # }"},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-132","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.2","title":"nflreadr 1.3.2","text":"CRAN release: 2023-01-06 Minor changes per changelist patch CRAN-related example issue.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"changes-1-3-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"nflreadr 1.3.2","text":".clear_cache() now re-exported without dot prefix clear_cache(). Hopefully obvious. join_coalesce() now added utility join two dataframes coalesce shared columns. load_teams() now uses argument current (TRUE/FALSE) standardize rows returned - aligns nflreadr::clean_team_abbrs nflreadr::team_abbr_mapping dictionary_participation added (thank @josephhero!) clean_homeaway() now preserves neutral site location well input class input attributes load_ff_rankings() URL bug corrected (thank @kharigardner) test example clean_homeaway() resolved CRAN failure Thank @ak47twq, @bachlaw, @brunomioto, @guga31bb, @Josephhero, @kharigardner, @mrcaseb, @MysteryPollster, @numbersinfigures, @ohri questions, feedback, contributions towards release.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-131","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.1","title":"nflreadr 1.3.1","text":"CRAN release: 2022-09-25 Fixes CRAN bug provides function improvements, notably improved logic load_participation()’s pbp join.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-features-1-3-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"nflreadr 1.3.1","text":"Added nflverse_game_id() computes valid nflverse game identifiers format \"{season}_{week}_{away}_{home}\"","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"function-updates-1-3-1","dir":"Changelog","previous_headings":"","what":"Function Updates","title":"nflreadr 1.3.1","text":"load_participation() now joins pbp via nflverse_game_id instead old_game_id load_snap_counts() now allows download 2012 season previously hardcoded 2013 (#128) progressively() now works purrr-style lambda functions longer checks progressor class, allowing used flexibly (cli-based progress bars.)","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"bugfixes-1-3-1","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"nflreadr 1.3.1","text":"nflverse_releases() nflverse_download() now accept .token arguments default gh::gh_token(). mostly let us test things properly. (#131) Adjust import references per Jenny Bryan’s recommendations hadley/r-pkgs#828 avoid loading unused packages. clean_player_names() now fully lives nflreadr, squish/trim happens first player name mapping update get_current_season() now exists, can’t agree name things. Thank @atungate, @grayhawk40, @guga31bb,@jestarr, @john-b-edwards,@marvin3FF,@mrcaseb, @SCasanova, @shirondru, @tanho63, @TheMathNinja contributions feedback towards release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-130","dir":"Changelog","previous_headings":"","what":"nflreadr 1.3.0","title":"nflreadr 1.3.0","text":"CRAN release: 2022-08-06 release introduces several new data functions, new utilities, array data/function updates.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-1-3-0","dir":"Changelog","previous_headings":"","what":"New Data!","title":"nflreadr 1.3.0","text":"load_participation() returns new play-level information players field, many players box, formation offense using. Data NGS starting 2016 onward load_contracts() downloads (historical) player contracts OverTheCap.com load_players() returns player-level information new recommended source (rosters) IDs, positions, birthdates etc. load_rosters_weekly() provides week--week team rosters dating back 2002. load_officials() returns game-level information officials assigned specific games.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-functions-1-3-0","dir":"Changelog","previous_headings":"","what":"New Functions!","title":"nflreadr 1.3.0","text":"nflverse_download() downloads files attached specified/releases local folder. facilitates something like arrow::open_dataset() reading files locally. nflverse_releases() lists releases can loaded nflverse_download() load_from_url() exposes new utility function loading csv, rds, qs, parquet URL memory.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"function-updates-1-3-0","dir":"Changelog","previous_headings":"","what":"Function Updates!","title":"nflreadr 1.3.0","text":"load_draft_picks() now rest career stat fields PFR *sitrep() functions now report package-specific options set. get_current_week() helper get current nfl season week load_rosters() now provides season-level rosters dating back 1920.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"other-bugfixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Other bugfixes","title":"nflreadr 1.3.0","text":"moved rbindlist helper manages attributes better update dictionary_snap_counts dictionary_schedules missing fields rewrite from_url error messages use cli improve usefulness bump minimum rlang version 1.0.0 add piggyback suggested dependency Export old class support S4/DBI/nflfastR::update_db() tibble Fix exportOldClass supports data.frame stuff? idea,,, options(nflreadr.prefer) defaults rds now since qs longer required dependency clean_player_names() now also removes commas (optionally using convert_lastfirst) clean_player_names() now also removes caps suffixes dictionary updates: return labelled. .sitrep() exits nicely packages investigated. #114 refactored loaders use load_from_url primary fixed broken example load_ff_opportunity() documentation. #117 Thank @albtree, @john-b-edwards, @mrcaseb, @pranavrajaram, @tanho63, @tpenney89 contributions feedback release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-120","dir":"Changelog","previous_headings":"","what":"nflreadr 1.2.0","title":"nflreadr 1.2.0","text":"CRAN release: 2022-03-17 release updates nflverse URLs use new nflverse-data repository releases, well provides improved pretty-printing methods tell data last updated.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-113","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.3","title":"nflreadr 1.1.3","text":"CRAN release: 2022-01-28 release adds functions arguments access new data, along backend changes.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-and-functions-1-1-3","dir":"Changelog","previous_headings":"","what":"New data and functions","title":"nflreadr 1.1.3","text":"load_ff_opportunity() downloads expected fantasy points data ffopportunity package load_ff_rankings() gains \"\" parameter return available rankings data (weekly archives since 2019) load_pfr_advstats() gains \"summary_level\" parameter return season-level data, fields available week-level.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"backend-1-1-3","dir":"Changelog","previous_headings":"","what":"Backend","title":"nflreadr 1.1.3","text":"options(nflreadr.verbose) replaces options(nflreadr.cache_warning) best way silence nflreadr messages. Improved data dictionaries ESPN QBR, Injuries, Trades, Depth Charts, Combine Exported most_recent_season() function Updated documentation improved linking file data issues. Sitrep functions ffopportunity nflverse packages. Pkgdown site upgraded Bootstrap 5. Thank @armstjc, @Grayhawk34, @john-b-edwards, @mrcaseb, @pranavrajaram, @rogers1000, @tanho63 contributions feedback release!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-112","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.2","title":"nflreadr 1.1.2","text":"CRAN release: 2021-12-08","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-functions-1-1-2","dir":"Changelog","previous_headings":"","what":"New Functions","title":"nflreadr 1.1.2","text":"nflverse_sitrep() ffverse_sitrep() give minimal overview package dependencies Minimum R version bumped R 3.6.0 - minimum version required read current RDS file-version. _sitrep() functions receive small print-related bugfix colouring improvement.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-111","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.1","title":"nflreadr 1.1.1","text":"CRAN release: 2021-10-05","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-and-functions-1-1-1","dir":"Changelog","previous_headings":"","what":"New Data and Functions","title":"nflreadr 1.1.1","text":"clean_player_names() clean_team_abbrs() added - help standardise player names team abbreviations based internal dictionaries. load_ff_rankings() now type argument can return \"draft\" \"week\" rankings DynastyProcess/data repo. clean_homeaway() converts dataframe games columns prefixed home_ away_ dataframe teams, renaming team_ opponent_ doubling rows. Added load_pfr_advstats() provides pass, rush, rec, def additional data week.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"nflreadr 1.1.1","text":"Add Rcpp RcppParallel minimum dependencies fix qs issues. Added message reminds user caching behavior. message displayed every 8 hours session interactive. Adjusted file location snap count data Thank @ajreinhard, @brunomioto, @jthomasmock, @mrcaseb, @SCasanova, @tanho63 feedback contributions package!","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-110","dir":"Changelog","previous_headings":"","what":"nflreadr 1.1.0","title":"nflreadr 1.1.0","text":"CRAN release: 2021-09-02 release makes backend changes speed, reduced dependency footprint, ease maintenance.","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"new-data-1-1-0","dir":"Changelog","previous_headings":"","what":"New Data","title":"nflreadr 1.1.0","text":"load_player_stats() can now retrieve weekly summaries kicking data specifying stat_type argument \"kicking\". load_combine() retrieves NFL combine data (PFR).","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"backend-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Backend Changes","title":"nflreadr 1.1.0","text":"Remove progress handling *_from_url() family functions move responsibility progressively() function decorator instead. See vignette details. Removed dependency dplyr purrr favour data.table - hopefully improves speed reduces dependency footprint. Uses rlang::arg_match0 instead match.arg (uses rlang explicitly instead implicitly dependency memoise).","code":""},{"path":"https://nflreadr.nflverse.com/news/index.html","id":"nflreadr-100","dir":"Changelog","previous_headings":"","what":"nflreadr 1.0.0","title":"nflreadr 1.0.0","text":"CRAN release: 2021-08-09 goal {nflreadr} efficiently load data nflverse GitHub repositories, features caching, optional progress updates, data dictionaries. time, includes data following repositories: nflverse/nflverse-pbp nflverse/nfldata nflverse/nflverse-rosters nflverse/espnscrapeR-data nflverse/nflverse-pfr dynastyprocess/data hopefully provide unified reliable package downloading nflverse data can extended rest nflverse ffverse package families. Special thanks Seb, Ben, John, Lee, Thomas contributions package data pipelines package relies 🎉","code":""}]
